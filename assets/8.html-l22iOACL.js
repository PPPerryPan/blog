import{_ as s,c as a,a as t,o as p}from"./app-Dh5bFHR3.js";const e="/blog/assets/image-20220519142847086-CZOXwBLX.png",l="/blog/assets/image-20220519142906274-BlLk9cJL.png",o="/blog/assets/image-20220519142934972-ftNGzPSP.png",i="/blog/assets/image-20220519164032857-DVI5gE_K.png",c="/blog/assets/image-20220522220156107-DNmuRb_c.png",u="/blog/assets/image-20220524213139908-5yz9-zgr.png",r="/blog/assets/image-20220524221525619-Q_uKZjQN.png",k="/blog/assets/image-20220524221551709-BU3KcpAs.png",d={};function v(b,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="contentprovider" tabindex="-1"><a class="header-anchor" href="#contentprovider"><span>ContentProvider</span></a></h1><p>在第6章写BroadcastTest项目的时候第一次接触了 Android 权限相关的内容，当时为了要监听开机广播，我们在 AndroidManifest.xml 文件中 添加了这样一句权限声明：</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span> <span class="token attr-name">package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.example.broadcasttest<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.permission.RECEIVE_BOOT_COMPLETED<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span> </span>
<span class="line">	...</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>监听开机广播涉及了用户设备的安全，如果不声明，程序会直接崩溃。</p><h2 id="在程序运行时申请权限" tabindex="-1"><a class="header-anchor" href="#在程序运行时申请权限"><span>在程序运行时申请权限</span></a></h2><p>新建一个RuntimePermissionTest项目；</p><p>在 Android 6.0 系统出现之前，拨打电话功能的实现非常简单：</p><p>先在 src/main/AndroidManifest.xml 中加入权限声明</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.example.runtimepermissiontest<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.permission.CALL_PHONE<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line">    &lt;application</span>
<span class="line">        ......</span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/makeCall<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Make Call<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!-- src/main/res/layout/activity_main.xml --&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/runtimepermissiontest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>runtimepermissiontest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Intent</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>net<span class="token punctuation">.</span>Uri</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>runtimepermissiontest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding <span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span></span>
<span class="line">        binding <span class="token operator">=</span> ActivityMainBinding<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>layoutInflater<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">val</span> view <span class="token operator">=</span> binding<span class="token punctuation">.</span>root</span>
<span class="line">        <span class="token function">setContentView</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span></span>
<span class="line">		</span>
<span class="line">        <span class="token comment">// 为按钮添加触发器</span></span>
<span class="line">        binding<span class="token punctuation">.</span>makeCall<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">val</span> intent <span class="token operator">=</span> <span class="token function">Intent</span><span class="token punctuation">(</span>Intent<span class="token punctuation">.</span>ACTION_CALL<span class="token punctuation">)</span></span>
<span class="line">                intent<span class="token punctuation">.</span>data <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;tel:10086&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> SecurityException<span class="token punctuation">)</span> <span class="token punctuation">{</span> e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而在 Android 6+， 此方法已无法使用，此时 Logcat 内容如下：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre><code><span class="line">2022-05-17 14:56:16.986 2050-6057/? I/ActivityTaskManager: START u0 {act=android.intent.action.CALL dat=tel:xxxxx cmp=com.android.server.telecom/.components.UserCallActivity} from uid 10135</span>
<span class="line">2022-05-17 14:56:16.986 2050-6057/? W/ActivityTaskManager: Permission Denial: starting Intent { act=android.intent.action.CALL dat=tel:xxxxx cmp=com.android.server.telecom/.components.UserCallActivity } from ProcessRecord{4b97c0e 7633:com.example.runtimepermissiontest/u0a135} (pid=7633, uid=10135) with revoked permission android.permission.CALL_PHONE</span>
<span class="line">2022-05-17 14:56:15.065 1857-1857/? W/adbd: timeout expired while flushing socket, closing</span>
<span class="line">2022-05-17 14:56:16.988 7633-7633/com.example.runtimepermissiontest W/System.err: java.lang.SecurityException: Permission Denial: starting Intent { act=android.intent.action.CALL dat=tel:xxxxx cmp=com.android.server.telecom/.components.UserCallActivity } from ProcessRecord{4b97c0e 7633:com.example.runtimepermissiontest/u0a135} (pid=7633, uid=10135) with revoked permission android.permission.CALL_PHONE</span>
<span class="line">2022-05-17 14:56:16.988 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.os.Parcel.createException(Parcel.java:2071)</span>
<span class="line">2022-05-17 14:56:16.988 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.os.Parcel.readException(Parcel.java:2039)</span>
<span class="line">2022-05-17 14:56:16.988 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.os.Parcel.readException(Parcel.java:1987)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.app.IActivityTaskManager$Stub$Proxy.startActivity(IActivityTaskManager.java:3851)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.app.Instrumentation.execStartActivity(Instrumentation.java:1705)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.app.Activity.startActivityForResult(Activity.java:5192)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at androidx.activity.ComponentActivity.startActivityForResult(ComponentActivity.java:597)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.app.Activity.startActivityForResult(Activity.java:5150)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at androidx.activity.ComponentActivity.startActivityForResult(ComponentActivity.java:583)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.app.Activity.startActivity(Activity.java:5521)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.app.Activity.startActivity(Activity.java:5489)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at com.example.runtimepermissiontest.MainActivity.onCreate$lambda-0(MainActivity.kt:24)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at com.example.runtimepermissiontest.MainActivity.$r8$lambda$2-IeCKXsDOq6Zmjm5M3sXKDlAOM(Unknown Source:0)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at com.example.runtimepermissiontest.MainActivity$$ExternalSyntheticLambda0.onClick(Unknown Source:2)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.view.View.performClick(View.java:7125)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at com.google.android.material.button.MaterialButton.performClick(MaterialButton.java:1194)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.view.View.performClickInternal(View.java:7102)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.view.View.access$3500(View.java:801)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.view.View$PerformClick.run(View.java:27336)</span>
<span class="line">2022-05-17 14:56:16.989 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.os.Handler.handleCallback(Handler.java:883)</span>
<span class="line">2022-05-17 14:56:16.992 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.os.Handler.dispatchMessage(Handler.java:100)</span>
<span class="line">2022-05-17 14:56:16.992 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.os.Looper.loop(Looper.java:214)</span>
<span class="line">2022-05-17 14:56:16.992 7633-7633/com.example.runtimepermissiontest W/System.err:     at android.app.ActivityThread.main(ActivityThread.java:7356)</span>
<span class="line">2022-05-17 14:56:16.993 7633-7633/com.example.runtimepermissiontest W/System.err:     at java.lang.reflect.Method.invoke(Native Method)</span>
<span class="line">2022-05-17 14:56:16.993 7633-7633/com.example.runtimepermissiontest W/System.err:     at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:492)</span>
<span class="line">2022-05-17 14:56:16.993 7633-7633/com.example.runtimepermissiontest W/System.err:     at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:930)</span>
<span class="line">2022-05-17 14:56:16.994 7633-7633/com.example.runtimepermissiontest W/System.err: Caused by: android.os.RemoteException: Remote stack trace:</span>
<span class="line">2022-05-17 14:56:16.994 7633-7633/com.example.runtimepermissiontest W/System.err:     at com.android.server.wm.ActivityStackSupervisor.checkStartAnyActivityPermission(ActivityStackSupervisor.java:1043)</span>
<span class="line">2022-05-17 14:56:16.994 7633-7633/com.example.runtimepermissiontest W/System.err:     at com.android.server.wm.ActivityStarter.startActivity(ActivityStarter.java:760)</span>
<span class="line">2022-05-17 14:56:16.995 7633-7633/com.example.runtimepermissiontest W/System.err:     at com.android.server.wm.ActivityStarter.startActivity(ActivityStarter.java:583)</span>
<span class="line">2022-05-17 14:56:16.995 7633-7633/com.example.runtimepermissiontest W/System.err:     at com.android.server.wm.ActivityStarter.startActivityMayWait(ActivityStarter.java:1288)</span>
<span class="line">2022-05-17 14:56:16.995 7633-7633/com.example.runtimepermissiontest W/System.err:     at com.android.server.wm.ActivityStarter.execute(ActivityStarter.java:514)</span>
<span class="line">2022-05-17 14:56:16.996 1798-4314/? W/audio_hw_generic: Not supplying enough data to HAL, expected position 817020 , only wrote 816996</span>
<span class="line">2022-05-17 14:56:20.163 1798-1798/? W/audio_hw_generic: Not supplying enough data to HAL, expected position 1095075 , only wrote 956467</span>
<span class="line">2022-05-17 14:56:24.945 1945-1945/? E/wifi_forwarder: RemoteConnection failed to initialize: RemoteConnection failed to open pipe</span>
<span class="line">2022-05-17 14:56:24.984 1922-1922/? E/netmgr: Failed to open QEMU pipe &#39;qemud:network&#39;: Invalid argument</span>
<span class="line">2022-05-17 14:56:33.572 2050-2132/? W/AppOps: Noting op not finished: uid 10098 pkg com.google.android.gms code 79 time=1652770411977 duration=0</span>
<span class="line">2022-05-17 14:56:37.004 2050-2132/? D/WificondControl: Scan result ready event</span>
<span class="line">2022-05-17 14:56:37.011 2050-2132/? E/WifiService: Permission violation - getScanResults not allowed for uid=10098, packageName=com.google.android.gms, reason=java.lang.SecurityException: Location mode is disabled for the device</span>
<span class="line"></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改一下 MainActivity.kt：</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/runtimepermissiontest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>runtimepermissiontest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Intent</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>pm<span class="token punctuation">.</span>PackageManager</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>net<span class="token punctuation">.</span>Uri</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>Toast</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>app<span class="token punctuation">.</span>ActivityCompat</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContextCompat</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>content<span class="token punctuation">.</span>PackageManagerCompat</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>runtimepermissiontest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>jar<span class="token punctuation">.</span>Manifest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding<span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token operator">..</span><span class="token operator">..</span><span class="token operator">..</span></span>
<span class="line"></span>
<span class="line">        binding<span class="token punctuation">.</span>makeCall<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 修改内容：</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>ContextCompat<span class="token punctuation">.</span><span class="token function">checkSelfPermission</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;android.Manifest.permission.CALL_PHONE&quot;</span></span></span>
<span class="line">                <span class="token punctuation">)</span> <span class="token operator">!=</span> PackageManager<span class="token punctuation">.</span>PERMISSION_GRANTED</span>
<span class="line">            <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                ActivityCompat<span class="token punctuation">.</span><span class="token function">requestPermissions</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token function">arrayOf</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>CALL_PHONE<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span></span>
<span class="line">        requestCode<span class="token operator">:</span> Int<span class="token punctuation">,</span></span>
<span class="line">        permissions<span class="token operator">:</span> Array<span class="token operator">&lt;</span><span class="token keyword">out</span> String<span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line">        grantResults<span class="token operator">:</span> IntArray</span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> permissions<span class="token punctuation">,</span> grantResults<span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment">// 重写新增：</span></span>
<span class="line">        <span class="token keyword">when</span> <span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token number">1</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>grantResults<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> grantResults<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> PackageManager<span class="token punctuation">.</span>PERMISSION_GRANTED<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                    Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;You denied the permission&quot;</span></span><span class="token punctuation">,</span>Toast<span class="token punctuation">.</span>LENGTH_LONG<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">call</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">val</span> intent <span class="token operator">=</span> <span class="token function">Intent</span><span class="token punctuation">(</span>Intent<span class="token punctuation">.</span>ACTION_CALL<span class="token punctuation">)</span></span>
<span class="line">            intent<span class="token punctuation">.</span>data <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;tel:10086&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">startActivity</span><span class="token punctuation">(</span>intent<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> SecurityException<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行，并点击 “Make Call”</p><p><img src="`+e+'" alt="image-20220519142847086"></p><p>如果点击 Deny， 将会出现 Toast</p><p><img src="'+l+'" alt="image-20220519142906274"></p><p>如果点击 Allow，将会开始拨打电话</p><p><img src="'+o+`" alt="image-20220519142934972"></p><h2 id="访问其他程序中的数据" tabindex="-1"><a class="header-anchor" href="#访问其他程序中的数据"><span>访问其他程序中的数据</span></a></h2><p>ContentProvider的用法一般有两种：</p><p>一种是使用现有的ContentProvider读取和操作相应程序中的数据；</p><p>另一种是创建自己的ContentProvider，给程序的数据提供外部访问接口。</p><h3 id="contentresolver-增删改查" tabindex="-1"><a class="header-anchor" href="#contentresolver-增删改查"><span>ContentResolver 增删改查</span></a></h3><p>不同于SQLiteDatabase，ContentResolver中的增删改查方法都是不接收表名参数的，而是使用一个Uri参数代替，这个参数被称为内容URI。</p><p>内容URI给ContentProvider中的数据建立 了唯一标识符，它主要由两部分组成：authority和path。</p><ul><li>authority是用于对不同的应用程序做区分的，一般为了避免冲突，会采用应用包名的方式进行命名。 <ul><li>比如某个应用的包名是 com.example.app，那么该应用对应的authority就可以命名为 com.example.app.provider。</li></ul></li><li>path则是用于对同一应用程序中不同的表做区分的，通常会添 加到authority的后面。 <ul><li>比如某个应用的数据库里存在两张表table1和table2，这时就可以将path分别命名为/table1和/table2，然后把authority和path进行组合，</li><li>内容URI就变成了 com.example.app.provider/table1和com.example.app.provider/table2。</li><li>不过，目前还很难辨认出这两个字符串就是两个内容URI，我们还需要在字符串的头部加上协议声明。</li></ul></li><li>因此，内容URI最标准的格式如下：</li></ul><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">content<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token operator">/</span>table1 </span>
<span class="line">content<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token operator">/</span>table2</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>内容URI可以非常清楚地表达我们想要访问哪个程序中哪张表里的数据。也正是因此，ContentResolver中的增删改查方法才都接收Uri对象作为参数。</p><p>得到了内容URI字符串之后，我们还需要将它解析成Uri对象才可以作为参数传入：</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">val</span> uri <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;content://com.example.app.provider/table1&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>只需要调用Uri.parse()方法，就可以将内容URI字符串解析成Uri对象了。</p><p>使用这个Uri对象查询table1表中的数据：</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">val</span> cursor <span class="token operator">=</span> contentResolver<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span> uri<span class="token punctuation">,</span></span>
<span class="line">projection<span class="token punctuation">,</span> selection<span class="token punctuation">,</span> selectionArgs<span class="token punctuation">,</span></span>
<span class="line">sortOrder<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>参数说明</strong></p><table><thead><tr><th>query() 方法参数</th><th>对应 SQL 部分</th><th>描述</th></tr></thead><tbody><tr><td>uri</td><td>from table_name</td><td>指定查询某个 App 下的某张表</td></tr><tr><td>projection</td><td>select column1, column2</td><td>指定查询的列名</td></tr><tr><td>selection</td><td>where column = value</td><td>指定 where 中的占位符提供具体的值</td></tr><tr><td>selectionArgs</td><td>-</td><td>为 where 中的占位符提供具体的值</td></tr><tr><td>sortOrder</td><td>order by column1, column2</td><td>指定查询结果的排序方式</td></tr></tbody></table><p>查询完成后返回的仍然是一个Cursor对象，读取的思路仍然是通过移动游标的位置遍历Cursor的所有行，然后取出每一行中相应列的数据。</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">while</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">moveToNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">	<span class="token keyword">val</span> column1 <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;column1&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> </span>
<span class="line">	<span class="token keyword">val</span> column2 <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;column2&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line">cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>向 table1表中添加一条数据：</p><p>将待添加的数据组装到ContentValues中，然后调用ContentResolver的insert()方法，将Uri和ContentValues作为参数传入即可：</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">val</span> values <span class="token operator">=</span> <span class="token function">contentValuesOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;column1&quot;</span></span> <span class="token keyword">to</span> <span class="token string-literal singleline"><span class="token string">&quot;text&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;column2&quot;</span></span> <span class="token keyword">to</span> <span class="token number">1</span><span class="token punctuation">)</span> </span>
<span class="line">contentResolver<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> values<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>更新这条数据：</p><p>把column1的值清空，可以借助ContentResolver的 update()方法实现</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">val</span> values <span class="token operator">=</span> <span class="token function">contentValuesOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;column1&quot;</span></span> <span class="token keyword">to</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span> </span>
<span class="line">contentResolver<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> values<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;column1 = ? and column2 = ?&quot;</span></span><span class="token punctuation">,</span> <span class="token function">arrayOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;text&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;1&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>删除这条数据：</p><p>调用ContentResolver的delete()方法</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">contentResolver<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;column2 = ?&quot;</span></span><span class="token punctuation">,</span> <span class="token function">arrayOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;1&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="读取联系人" tabindex="-1"><a class="header-anchor" href="#读取联系人"><span>读取联系人</span></a></h2><p>首先，到通讯录中确认有联系人的存在，如果没有，则创建几个。</p><p><img src="`+i+`" alt="image-20220519164032857"></p><h3 id="实践" tabindex="-1"><a class="header-anchor" href="#实践"><span>实践</span></a></h3><p>创建项目 ContactsTest</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token comment">&lt;!-- src/main/res/layout/activity_main.xml --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vertical<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ListView</span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/contactsView<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ListView</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>LinearLayout里只放置了一个ListView。这里之所以使用ListView而不是 RecyclerView，是因为我们要将关注的重点放在读取系统联系人上面，如果使用 RecyclerView的话，代码偏多，会容易让我们找不着重点。</p><p>权限声明</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>manifest</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name">package</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>com.example.contactstest<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>uses-permission</span> <span class="token attr-name"><span class="token namespace">android:</span>name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>android.permission.READ_CONTACTS<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line">    &lt;application</span>
<span class="line">        ......</span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>application</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>manifest</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- src/main/AndroidManifest.xml --&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MainActivity.kt</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/contactstest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>contactstest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>SuppressLint</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>pm<span class="token punctuation">.</span>PackageManager</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>ContactsContract</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>ArrayAdapter</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>Toast</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>app<span class="token punctuation">.</span>ActivityCompat</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContextCompat</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>contactstest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding<span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> contactsList <span class="token operator">=</span> ArrayList<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> adapter<span class="token operator">:</span> ArrayAdapter<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        binding <span class="token operator">=</span> ActivityMainBinding<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>layoutInflater<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">val</span> view <span class="token operator">=</span> binding<span class="token punctuation">.</span>root</span>
<span class="line">        <span class="token function">setContentView</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 首先按照ListView的标准用法对其初始化，然后开始调用运行时权限的处理逻辑，因为READ_CONTACTS权限属于危险权限。</span></span>
<span class="line">        <span class="token comment">// 所以在用户授权之后，才能调用readContacts()方法读取系统联系人信息。</span></span>
<span class="line">        adapter <span class="token operator">=</span> <span class="token function">ArrayAdapter</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> android<span class="token punctuation">.</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>simple_list_item_1<span class="token punctuation">,</span> contactsList<span class="token punctuation">)</span></span>
<span class="line">        binding<span class="token punctuation">.</span>contactsView<span class="token punctuation">.</span>adapter <span class="token operator">=</span> adapter</span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>ContextCompat<span class="token punctuation">.</span><span class="token function">checkSelfPermission</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> android<span class="token punctuation">.</span>Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>READ_CONTACTS<span class="token punctuation">)</span></span>
<span class="line">            <span class="token operator">!=</span> PackageManager<span class="token punctuation">.</span>PERMISSION_GRANTED</span>
<span class="line">        <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            ActivityCompat<span class="token punctuation">.</span><span class="token function">requestPermissions</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token keyword">this</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token function">arrayOf</span><span class="token punctuation">(</span>android<span class="token punctuation">.</span>Manifest<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>READ_CONTACTS<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token number">1</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token function">readContacts</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span></span>
<span class="line">        requestCode<span class="token operator">:</span> Int<span class="token punctuation">,</span></span>
<span class="line">        permissions<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token punctuation">,</span></span>
<span class="line">        grantResults<span class="token operator">:</span> IntArray</span>
<span class="line">    <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onRequestPermissionsResult</span><span class="token punctuation">(</span>requestCode<span class="token punctuation">,</span> permissions<span class="token punctuation">,</span> grantResults<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">when</span> <span class="token punctuation">(</span>requestCode<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token number">1</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">if</span> <span class="token punctuation">(</span>grantResults<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> grantResults<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> PackageManager<span class="token punctuation">.</span>PERMISSION_GRANTED<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token function">readContacts</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">                    Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;You denied the permission&quot;</span></span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_LONG<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation builtin">@SuppressLint</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Range&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">readContacts</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 查询联系人数据</span></span>
<span class="line">        <span class="token comment">// 使用了ContentResolver的 query()方法查询系统的联系人数据。不过传入的Uri参数怎么有些奇怪啊？</span></span>
<span class="line">        <span class="token comment">// 为什么没有调用Uri.parse()方法去解析一个内容URI字符串呢？</span></span>
<span class="line">        <span class="token comment">// 这是因为ContactsContract.CommonDataKinds.Phone类已经帮我们做好了封装，提供了一个 CONTENT_URI常量，</span></span>
<span class="line">        <span class="token comment">// 而这个常量就是使用Uri.parse()方法解析出来的结果。</span></span>
<span class="line">        <span class="token comment">// 接着对 query()方法返回的Cursor对象进行遍历，这里使用了?.操作符和apply函数来简化遍历的代码。</span></span>
<span class="line">        contentResolver<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span></span>
<span class="line">            ContactsContract<span class="token punctuation">.</span>CommonDataKinds<span class="token punctuation">.</span>Phone<span class="token punctuation">.</span>CONTENT_URI<span class="token punctuation">,</span></span>
<span class="line">            <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">            <span class="token keyword">null</span></span>
<span class="line">        <span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 将联系人姓名和手机号逐个取出：</span></span>
<span class="line">            <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">moveToNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 获取联系人姓名</span></span>
<span class="line">                <span class="token comment">// 联系人姓名这一列对应的常量是 ContactsContract.CommonDataKinds.Phone.DISPLAY_NAME</span></span>
<span class="line">                <span class="token keyword">val</span> displayName <span class="token operator">=</span></span>
<span class="line">                    <span class="token function">getString</span><span class="token punctuation">(</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span>ContactsContract<span class="token punctuation">.</span>CommonDataKinds<span class="token punctuation">.</span>Phone<span class="token punctuation">.</span>DISPLAY_NAME<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// 需要 @SuppressLint(&quot;Range&quot;)</span></span>
<span class="line">                <span class="token comment">// 获取联系人手机号</span></span>
<span class="line">                <span class="token comment">// 联系人手机号这一列对 应的常量是ContactsContract.CommonDataKinds.Phone.NUMBER。</span></span>
<span class="line">                <span class="token keyword">val</span> number <span class="token operator">=</span></span>
<span class="line">                    <span class="token function">getString</span><span class="token punctuation">(</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span>ContactsContract<span class="token punctuation">.</span>CommonDataKinds<span class="token punctuation">.</span>Phone<span class="token punctuation">.</span>NUMBER<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 需要 @SuppressLint(&quot;Range&quot;)</span></span>
<span class="line">                <span class="token comment">// 取出后进行拼接，并且在中间加上换行符，然后将拼接后的数据添加到ListView的数据源里</span></span>
<span class="line">                contactsList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">displayName</span></span><span class="token string">\\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">number</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token comment">// 通知刷新一下ListView</span></span>
<span class="line">            adapter<span class="token punctuation">.</span><span class="token function">notifyDataSetChanged</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token comment">// 最后千万不要忘记将Cursor对象关闭</span></span>
<span class="line">            <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="创建自己的-contentprovider" tabindex="-1"><a class="header-anchor" href="#创建自己的-contentprovider"><span>创建自己的 ContentProvider</span></a></h2><h3 id="创建-contentprovider-的步骤" tabindex="-1"><a class="header-anchor" href="#创建-contentprovider-的步骤"><span>创建 ContentProvider 的步骤</span></a></h3><p>跨程序共享数据的功能，可以通过新建一个类去继承 ContentProvider的方式来实现。ContentProvider类中有6个抽象方法，我们在使用子类继承 它的时候，需要将这6个方法全部重写。例：</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">class</span> MyProvider <span class="token operator">:</span> <span class="token function">ContentProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> Boolean <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token boolean">false</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">query</span><span class="token punctuation">(</span></span>
<span class="line">        uri<span class="token operator">:</span> Uri<span class="token punctuation">,</span></span>
<span class="line">        projection<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token operator">?</span><span class="token punctuation">,</span></span>
<span class="line">        selection<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">,</span></span>
<span class="line">        selectionArgs<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token operator">?</span><span class="token punctuation">,</span></span>
<span class="line">        sortOrder<span class="token operator">:</span> String<span class="token operator">?</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token operator">:</span> Cursor<span class="token operator">?</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">null</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">insert</span><span class="token punctuation">(</span>uri<span class="token operator">:</span> Uri<span class="token punctuation">,</span> values<span class="token operator">:</span> ContentValues<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> Uri<span class="token operator">?</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">null</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">update</span><span class="token punctuation">(</span></span>
<span class="line">        uri<span class="token operator">:</span> Uri<span class="token punctuation">,</span></span>
<span class="line">        values<span class="token operator">:</span> ContentValues<span class="token operator">?</span><span class="token punctuation">,</span></span>
<span class="line">        selection<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">,</span></span>
<span class="line">        selectionArgs<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token operator">?</span></span>
<span class="line">    <span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token number">0</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">delete</span><span class="token punctuation">(</span>uri<span class="token operator">:</span> Uri<span class="token punctuation">,</span> selection<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">,</span> selectionArgs<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> Int <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token number">0</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">getType</span><span class="token punctuation">(</span>uri<span class="token operator">:</span> Uri<span class="token punctuation">)</span><span class="token operator">:</span> String<span class="token operator">?</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">return</span> <span class="token keyword">null</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>六个方法的作用</p><ol><li><p><code>onCreate()</code>。初始化ContentProvider的时候调用。通常会在这里完成对数据库的创建和 升级等操作，返回true表示ContentProvider初始化成功，返回false则表示失败。</p></li><li><p><code>query()</code>。从ContentProvider中查询数据。uri参数用于确定查询哪张表，projection 参数用于确定查询哪些列，selection和selectionArgs参数用于约束查询哪些行，sortOrder参数用于对结果进行排序，查询的结果存放在Cursor对象中返回。</p></li><li><p><code>insert()</code>。向ContentProvider中添加一条数据。uri参数用于确定要添加到的表，待添 加的数据保存在values参数中。添加完成后，返回一个用于表示这条新记录的URI。</p></li><li><p><code>update()</code>。更新ContentProvider中已有的数据。uri参数用于确定更新哪一张表中的数 据，新数据保存在values参数中，selection和selectionArgs参数用于约束更新哪些行， 受影响的行数将作为返回值返回。</p></li><li><p><code>delete()</code>。从ContentProvider中删除数据。uri参数用于确定删除哪一张表中的数据， selection和selectionArgs参数用于约束删除哪些行，被删除的行数将作为返回值返回。</p></li><li><p><code>getType()</code>。根据传入的内容URI返回相应的MIME类型。</p></li></ol><p><strong>回顾</strong></p><p>一个标准的内容URI写法：</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">content<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token operator">/</span>table1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在这个内容URI的后面加上一个id，以下表示调用方期望访问的是com.example.app这个应用的table1表中id为1的数据。：</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">content<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token operator">/</span>table1<span class="token operator">/</span><span class="token number">1</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p><strong>通配符</strong></p><p>*表示匹配任意长度的任意字符。</p><p>#表示匹配任意长度的数字。</p><p>一个能够匹配任意表的内容 URI 格式：</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">content<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token comment">/*</span>
<span class="line"></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>一个能够匹配 table1 表中任意一行数据的内容URI格式</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">content<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token operator">/</span>table1<span class="token operator">/</span>#</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>借助UriMatcher这个类就可以轻松地实现匹配内容URI的功能。UriMatcher 中提供了一个 addURI() 方法，这个方法接收3个参数，可以分别把authority、path和一个自定义代码传进去。这样，当调用UriMatcher的match()方法时，就可以将一个Uri对象传入，返回值是某个能够匹配这个Uri对象所对应的自定义代码，利用这个代码，我们就可以判断 出调用方期望访问的是哪张表中的数据了。</p><p>例：</p><p>MyProvider中新增了4个整型变量，其中，，，。接着我们。</p><p>然后</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">class</span> MyProvider <span class="token operator">:</span> <span class="token function">ContentProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> table1Dir <span class="token operator">=</span> <span class="token number">0</span>	<span class="token comment">// table1Dir表示访问table1表中的所有数据</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> table1Item <span class="token operator">=</span> <span class="token number">1</span>	<span class="token comment">// table1Item表示访问table1表中的单条数据</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> table2Dir <span class="token operator">=</span> <span class="token number">2</span>	<span class="token comment">// table2Dir表示访问table2表中的所有数据</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> table2Item <span class="token operator">=</span> <span class="token number">3</span>	<span class="token comment">// table2Item表示访问table2表中的单条数据</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> uriMatcher <span class="token operator">=</span> <span class="token function">UriMatcher</span><span class="token punctuation">(</span>UriMatcher<span class="token punctuation">.</span>NO_MATCH<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">init</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 在MyProvider类实例化的时候立刻创建UriMatcher的实例，并调用addURI()方法，</span></span>
<span class="line">        <span class="token comment">// 将期望匹配的内容URI格式传递进去，注意这里传入的路径参数是可以使用通配符(说明见上)的</span></span>
<span class="line">        uriMatcher<span class="token punctuation">.</span><span class="token function">addURI</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.example.app.provider&quot;</span></span><span class="token punctuation">,</span><span class="token string-literal singleline"><span class="token string">&quot;table1&quot;</span></span><span class="token punctuation">,</span>table1Dir<span class="token punctuation">)</span>		</span>
<span class="line">        uriMatcher<span class="token punctuation">.</span><span class="token function">addURI</span> <span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.example.app.provider &quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;table1/#&quot;</span></span><span class="token punctuation">,</span> table1Item<span class="token punctuation">)</span>	</span>
<span class="line">        uriMatcher<span class="token punctuation">.</span><span class="token function">addURI</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.example.app.provider &quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;table2&quot;</span></span><span class="token punctuation">,</span> table2Dir<span class="token punctuation">)</span>		</span>
<span class="line">        uriMatcher<span class="token punctuation">.</span><span class="token function">addURI</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;com.example.app.provider &quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;table2/#&quot;</span></span><span class="token punctuation">,</span> table2Item<span class="token punctuation">)</span>	</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">query</span><span class="token punctuation">(</span></span>
<span class="line">        <span class="token comment">// 当query()方法被调用的时候，就会通过UriMatcher的match()方法对传入的Uri对象进行匹配，</span></span>
<span class="line">        <span class="token comment">// 如果发现UriMatcher中某个 内容URI格式成功匹配了该Uri对象，则会返回相应的自定义代码，</span></span>
<span class="line">        <span class="token comment">// 然后我们就可以判断出调用方期望访问的到底是什么数据了。</span></span>
<span class="line">        uri<span class="token operator">:</span> Uri<span class="token punctuation">,</span> projection<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token operator">?</span><span class="token punctuation">,</span>  selection<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">,</span> selectionArgs<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token operator">?</span><span class="token punctuation">,</span> sortOrder<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">)</span><span class="token operator">:</span> Cursor<span class="token operator">?</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">when</span> <span class="token punctuation">(</span>uriMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            table1Dir <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 查询table1表中的所有数据</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            table1Item <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 查询table1表中的单条数据</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            table2Dir <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 查询table2表中的所有数据</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            table2Item <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 查询table2表中的单条数据</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述代码只是以query()方法为例做了个示范，其实insert()、update()、delete()这几 个方法的实现是差不多的，它们都会携带uri这个参数，然后同样利用UriMatcher的 match()方法判断出调用方期望访问的是哪张表，再对该表中的数据进行相应的操作就可以了。</p><p>除此之外，还有一个方法你可能会比较陌生，即getType()方法。它是所有的 ContentProvider都必须提供的一个方法，用于获取Uri对象所对应的MIME类型。一个内容URI所对应的MIME字符串主要由3部分组成，Android对这3个部分做了如下格式规定。</p><ul><li>必须以vnd开头。 如果内容URI以路径结尾，则后接android.cursor.dir/；</li><li>如果内容URI以id结尾，则后 接android.cursor.item/。</li><li>最后接上vnd.&lt;authority&gt;.&lt;path&gt;。</li></ul><p>所以，对于 <code>content://com.example.app.provider/table1</code> 这个内容URI，它所对应的MIME类型就可以写成：</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">vnd<span class="token punctuation">.</span>android<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>dir<span class="token operator">/</span>vnd<span class="token punctuation">.</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>table1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>对于 <code>content://com.example.app.provider/table1/1</code> 这个内容URI，它所对应的MIME类型就可以写成：</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line">vnd<span class="token punctuation">.</span>android<span class="token punctuation">.</span>cursor<span class="token punctuation">.</span>item<span class="token operator">/</span>vnd<span class="token punctuation">.</span>com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>app<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>table1</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>继续完善MyProvider中的内容了，这次来实现 getType() 方法中的逻辑:</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token keyword">class</span> MyProvider <span class="token operator">:</span> <span class="token function">ContentProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> </span>
<span class="line">	<span class="token operator">..</span><span class="token punctuation">.</span></span>
<span class="line">	<span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">getType</span><span class="token punctuation">(</span>uri<span class="token operator">:</span> Uri<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>uriMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        table1Dir <span class="token operator">-&gt;</span> <span class="token string-literal singleline"><span class="token string">&quot;vnd.android.cursor.dir/vnd.com.example.app.provider.table1&quot;</span></span></span>
<span class="line">        table1Item <span class="token operator">-&gt;</span> <span class="token string-literal singleline"><span class="token string">&quot;vnd.android.cursor.item/vnd.com.example.app.provider.table1&quot;</span></span></span>
<span class="line">        table2Dir <span class="token operator">-&gt;</span> <span class="token string-literal singleline"><span class="token string">&quot;vnd.android.cursor.dir/vnd.com.example.app.provider.table2&quot;</span></span></span>
<span class="line">        table2Item <span class="token operator">-&gt;</span> <span class="token string-literal singleline"><span class="token string">&quot;vnd.android.cursor.item/vnd.com.example.app.provider.table2&quot;</span></span></span>
<span class="line">        <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token keyword">null</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>到这里，一个完整的ContentProvider就创建完成了，现在任何一个应用程序都可以使用 ContentResolver访问我们程序中的数据。那么，如何才能保证隐私数据不会泄漏出去呢？</p><p>其实多亏了ContentProvider的良好机制，这个问题在不知不觉中已经被解决了。因为所有的增删改查操作都一定要匹配到相应的内容URI格式才能进行，而我们当然不可能向UriMatcher中添加隐私数据的URI，所以这部分数据根本无法被外部程序访问，安全问题也就不存在了。</p><h3 id="实践-1" tabindex="-1"><a class="header-anchor" href="#实践-1"><span>实践</span></a></h3><p>打开DatabaseTest项目，首先将MyDatabaseHelper中使用Toast弹出创建数据库成功的提示去除，因为跨程序访问时我们不能直接使用Toast。</p><p>然后创建一个 ContentProvider，右击com.example.databasetest包→New→Other→Content Provider</p><p>Class Name: DatabaseProvider</p><p>URI Authorities: com.example.databasetest.provider</p><p>Exported属性表示是否允许外部程序访问我们 的ContentProvider</p><p>Enabled属性表示是否启用这个ContentProvider。</p><p><img src="`+c+`" alt="image-20220522220156107"></p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/databasetest/DatabaseProvider.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentProvider</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>UriMatcher</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>Cursor</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>net<span class="token punctuation">.</span>Uri</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> DatabaseProvider <span class="token operator">:</span> <span class="token function">ContentProvider</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 首先，在类的一开始，同样是定义了4个变量，分别用于表示访问Book表中的所有数据、</span></span>
<span class="line">    <span class="token comment">// 访问Book表中的单条数据、访问Category表中的所有数据和访问Category表中的单条数据。</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> bookDir <span class="token operator">=</span> <span class="token number">0</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> bookItem <span class="token operator">=</span> <span class="token number">1</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> categoryDir <span class="token operator">=</span> <span class="token number">2</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> categoryItem <span class="token operator">=</span> <span class="token number">3</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> authority <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;com.example.databasetest.provider&quot;</span></span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">var</span> dbHelper<span class="token operator">:</span> MyDatabaseHelper<span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 然后在一个by lazy代码块里对UriMatcher进行了初始化操作，将期望匹配的几种URI格式添加了进去。</span></span>
<span class="line">    	<span class="token comment">// by lazy代码块是Kotlin提供的一种懒加载技术，代码块中的代码一开始并不会执行，</span></span>
<span class="line">    	<span class="token comment">// 只有当uriMatcher变量首次被调用的时候才会执行，并且会将代码块中最后一 行代码的返回值赋给uriMatcher。</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> uriMatcher <span class="token keyword">by</span> lazy <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> matcher <span class="token operator">=</span> <span class="token function">UriMatcher</span><span class="token punctuation">(</span>UriMatcher<span class="token punctuation">.</span>NO_MATCH<span class="token punctuation">)</span></span>
<span class="line">        matcher<span class="token punctuation">.</span><span class="token function">addURI</span><span class="token punctuation">(</span>authority<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;book&quot;</span></span><span class="token punctuation">,</span> bookDir<span class="token punctuation">)</span></span>
<span class="line">        matcher<span class="token punctuation">.</span><span class="token function">addURI</span><span class="token punctuation">(</span>authority<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;book/#&quot;</span></span><span class="token punctuation">,</span> bookItem<span class="token punctuation">)</span></span>
<span class="line">        matcher<span class="token punctuation">.</span><span class="token function">addURI</span><span class="token punctuation">(</span>authority<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;category&quot;</span></span><span class="token punctuation">,</span> categoryDir<span class="token punctuation">)</span></span>
<span class="line">        matcher<span class="token punctuation">.</span><span class="token function">addURI</span><span class="token punctuation">(</span>authority<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;category/#&quot;</span></span><span class="token punctuation">,</span> categoryItem<span class="token punctuation">)</span></span>
<span class="line">        matcher</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 综合利用了Getter方法语法糖、?.操作符、let函数、?:操作符以及单行代码函数语法糖。</span></span>
<span class="line">    <span class="token comment">// 首先调用了getContext()方法并借助?.操作符和let函数判断它的返回值是否为空：</span></span>
<span class="line">    <span class="token comment">// 如果为空就使用?:操作符返回false，表示 ContentProvider初始化失败；如果不为空就执行let函数中的代码。</span></span>
<span class="line">    <span class="token comment">// 在let函数中创建了一个MyDatabaseHelper的实例，然后返回true表示ContentProvider初始化成功。</span></span>
<span class="line">    <span class="token comment">// 由于我们借 助了多个操作符和标准函数，因此这段逻辑是在一行表达式内完成的，符合单行代码函数的语法糖要求，</span></span>
<span class="line">    <span class="token comment">// 所以直接用等号连接返回值即可。其他几个方法的语法结构是类似的。</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span> context<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">{</span></span>
<span class="line">        dbHelper <span class="token operator">=</span> <span class="token function">MyDatabaseHelper</span><span class="token punctuation">(</span>it<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;BookStore.db&quot;</span></span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token boolean">true</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token operator">?:</span> <span class="token boolean">false</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 这个方法中先获取了SQLiteDatabase的实例，然后根据传入的Uri参数判断用户想要访问哪张表，</span></span>
<span class="line">    <span class="token comment">// 再调用SQLiteDatabase的query()进行查询，并将Cursor对象返回就好了。</span></span>
<span class="line">    <span class="token comment">// 注意，当访问单条数据的时候，调用了Uri对象的getPathSegments()方法，它会将内容URI权限之后的部分以“/”符号进行分割，</span></span>
<span class="line">    <span class="token comment">// 并把分割后的结果放入一个字符串列表中，那这个列表的第0个位置存放的就是路径，第1个位置存放的就是id了。</span></span>
<span class="line">    <span class="token comment">// 得到了id之后，再通过selection和selectionArgs参数进行约束，就实现了查询单条数据的功能。</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">query</span><span class="token punctuation">(</span></span>
<span class="line">        uri<span class="token operator">:</span> Uri<span class="token punctuation">,</span> projection<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token operator">?</span><span class="token punctuation">,</span> selection<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">,</span></span>
<span class="line">        selectionArgs<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token operator">?</span><span class="token punctuation">,</span> sortOrder<span class="token operator">:</span> String<span class="token operator">?</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token operator">=</span> dbHelper<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 查询数据</span></span>
<span class="line">        <span class="token keyword">val</span> db <span class="token operator">=</span> it<span class="token punctuation">.</span>readableDatabase</span>
<span class="line">        <span class="token keyword">val</span> cursor <span class="token operator">=</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>uriMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            bookDir <span class="token operator">-&gt;</span> db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Book&quot;</span></span><span class="token punctuation">,</span> projection<span class="token punctuation">,</span> selection<span class="token punctuation">,</span> selectionArgs<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> sortOrder<span class="token punctuation">)</span></span>
<span class="line">            bookItem <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">val</span> bookId <span class="token operator">=</span> uri<span class="token punctuation">.</span>pathSegments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">                db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Book&quot;</span></span><span class="token punctuation">,</span> projection<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;id = ?&quot;</span></span><span class="token punctuation">,</span> <span class="token function">arrayOf</span><span class="token punctuation">(</span>bookId<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> sortOrder<span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            categoryDir <span class="token operator">-&gt;</span> db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token string-literal singleline"><span class="token string">&quot;Category&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                projection<span class="token punctuation">,</span></span>
<span class="line">                selection<span class="token punctuation">,</span></span>
<span class="line">                selectionArgs<span class="token punctuation">,</span></span>
<span class="line">                <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">                sortOrder</span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">            categoryItem <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">val</span> categoryId <span class="token operator">=</span> uri<span class="token punctuation">.</span>pathSegments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">                db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token string-literal singleline"><span class="token string">&quot;Category&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                    projection<span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string-literal singleline"><span class="token string">&quot;id = ?&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token function">arrayOf</span><span class="token punctuation">(</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token keyword">null</span><span class="token punctuation">,</span></span>
<span class="line">                    sortOrder</span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token keyword">null</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        cursor</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 先获取了SQLiteDatabase的实例，然后根据传入的Uri参数判断用户想要往哪张表里添加数据，再调用SQLiteDatabase的insert()方法进行添加就可以了。</span></span>
<span class="line">    <span class="token comment">// 注意，insert()方法要求返回一个能够表示这条新增数据的URI，</span></span>
<span class="line">    <span class="token comment">// 所以我们还需要调用 Uri.parse()方法，将一个内容URI解析成Uri对象，当然这个内容URI是以新增数据的id结尾的。</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">insert</span><span class="token punctuation">(</span>uri<span class="token operator">:</span> Uri<span class="token punctuation">,</span> values<span class="token operator">:</span> ContentValues<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">=</span> dbHelper<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 添加数据</span></span>
<span class="line">        <span class="token keyword">val</span> db <span class="token operator">=</span> it<span class="token punctuation">.</span>writableDatabase</span>
<span class="line">        <span class="token keyword">val</span> uriReturn <span class="token operator">=</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>uriMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            bookDir<span class="token punctuation">,</span> bookItem <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">val</span> newBookId <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Book&quot;</span></span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> values<span class="token punctuation">)</span></span>
<span class="line">                Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;content://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">authority</span></span><span class="token string">/book/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">newBookId</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            categoryDir<span class="token punctuation">,</span> categoryDir <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">val</span> newCategoryId <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Category&quot;</span></span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> values<span class="token punctuation">)</span></span>
<span class="line">                Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;content://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">authority</span></span><span class="token string">/book/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">newCategoryId</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token keyword">null</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        uriReturn</span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 先获取 SQLiteDatabase的实例，然后根据传入的uri参数判断用户想要更新哪张表里的数据，</span></span>
<span class="line">    <span class="token comment">// 再调用SQLiteDatabase的update()方法进行更新就好了，受影响的行数将作为返回值返回。</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">update</span><span class="token punctuation">(</span></span>
<span class="line">        uri<span class="token operator">:</span> Uri<span class="token punctuation">,</span></span>
<span class="line">        values<span class="token operator">:</span> ContentValues<span class="token operator">?</span><span class="token punctuation">,</span></span>
<span class="line">        selection<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">,</span></span>
<span class="line">        selectionArgs<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token operator">?</span></span>
<span class="line">    <span class="token punctuation">)</span> <span class="token operator">=</span></span>
<span class="line">        dbHelper<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 更新数据</span></span>
<span class="line">            <span class="token keyword">val</span> db <span class="token operator">=</span> it<span class="token punctuation">.</span>writableDatabase</span>
<span class="line">            <span class="token keyword">val</span> updatedRows <span class="token operator">=</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>uriMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                bookDir <span class="token operator">-&gt;</span> db<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Book&quot;</span></span><span class="token punctuation">,</span> values<span class="token punctuation">,</span> selection<span class="token punctuation">,</span> selectionArgs<span class="token punctuation">)</span></span>
<span class="line">                bookItem <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">val</span> bookId <span class="token operator">=</span> uri<span class="token punctuation">.</span>pathSegments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">                    db<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Book&quot;</span></span><span class="token punctuation">,</span> values<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;id = ?&quot;</span></span><span class="token punctuation">,</span> <span class="token function">arrayOf</span><span class="token punctuation">(</span>bookId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                categoryDir <span class="token operator">-&gt;</span> db<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Category&quot;</span></span><span class="token punctuation">,</span> values<span class="token punctuation">,</span> selection<span class="token punctuation">,</span> selectionArgs<span class="token punctuation">)</span></span>
<span class="line">                categoryItem <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">val</span> categoryId <span class="token operator">=</span> uri<span class="token punctuation">.</span>pathSegments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">                    db<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Category&quot;</span></span><span class="token punctuation">,</span> values<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;id = ?&quot;</span></span><span class="token punctuation">,</span> <span class="token function">arrayOf</span><span class="token punctuation">(</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token number">0</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            updatedRows</span>
<span class="line">        <span class="token punctuation">}</span> <span class="token operator">?:</span> <span class="token number">0</span></span>
<span class="line">    </span>
<span class="line">    <span class="token comment">// 先获取SQLiteDatabase的实例，然后根据传入的uri参数判断用户想要删除哪张表里的数据，</span></span>
<span class="line">    <span class="token comment">// 再调用SQLiteDatabase的delete()方法进行删除就好了，被删除的行数将作为返回值返回。</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">delete</span><span class="token punctuation">(</span>uri<span class="token operator">:</span> Uri<span class="token punctuation">,</span> selection<span class="token operator">:</span> String<span class="token operator">?</span><span class="token punctuation">,</span> selectionArgs<span class="token operator">:</span> Array<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span><span class="token operator">?</span><span class="token punctuation">)</span> <span class="token operator">=</span></span>
<span class="line">        dbHelper<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 删除数据</span></span>
<span class="line">            <span class="token keyword">val</span> db <span class="token operator">=</span> it<span class="token punctuation">.</span>writableDatabase</span>
<span class="line">            <span class="token keyword">val</span> deletedRows <span class="token operator">=</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>uriMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                bookDir <span class="token operator">-&gt;</span> db<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Book&quot;</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">,</span> selectionArgs<span class="token punctuation">)</span></span>
<span class="line">                bookItem <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">val</span> bookId <span class="token operator">=</span> uri<span class="token punctuation">.</span>pathSegments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">                    db<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Book&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;id = ?&quot;</span></span><span class="token punctuation">,</span> <span class="token function">arrayOf</span><span class="token punctuation">(</span>bookId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                categoryDir <span class="token operator">-&gt;</span> db<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Category&quot;</span></span><span class="token punctuation">,</span> selection<span class="token punctuation">,</span> selectionArgs<span class="token punctuation">)</span></span>
<span class="line">                categoryItem <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">val</span> categoryId <span class="token operator">=</span> uri<span class="token punctuation">.</span>pathSegments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span></span>
<span class="line">                    db<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Category&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;id = ?&quot;</span></span><span class="token punctuation">,</span> <span class="token function">arrayOf</span><span class="token punctuation">(</span>categoryId<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token number">0</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            deletedRows</span>
<span class="line">        <span class="token punctuation">}</span> <span class="token operator">?:</span> <span class="token number">0</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 按照上一节中介绍的格式规则编写（往上滑，在上面！）</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">getType</span><span class="token punctuation">(</span>uri<span class="token operator">:</span> Uri<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token keyword">when</span> <span class="token punctuation">(</span>uriMatcher<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>uri<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        bookDir <span class="token operator">-&gt;</span> <span class="token string-literal singleline"><span class="token string">&quot;vnd.android.cursor.dir/vnd.com.example.databasetest.provider.book&quot;</span></span></span>
<span class="line">        bookItem <span class="token operator">-&gt;</span> <span class="token string-literal singleline"><span class="token string">&quot;vnd.android.cursor.item/vnd.com.example.databasetest.provider.book&quot;</span></span></span>
<span class="line">        categoryDir <span class="token operator">-&gt;</span> <span class="token string-literal singleline"><span class="token string">&quot;vnd.android.cursor.dir/vnd.com.example.databasetest.provider.category&quot;</span></span></span>
<span class="line">        categoryItem <span class="token operator">-&gt;</span> <span class="token string-literal singleline"><span class="token string">&quot;vnd.android.cursor.item/vnd.com.example.databasetest.provider.category&quot;</span></span></span>
<span class="line">        <span class="token keyword">else</span> <span class="token operator">-&gt;</span> <span class="token keyword">null</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>另外，ContentProvider一定要在AndroidManifest.xml文件中注册才可以使用（AS已自动注册）</p><p><img src="`+u+`" alt="image-20220524213139908"></p><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h3><p>首先需要将DatabaseTest程序从模拟器中删除，以防止上一章中产生的遗留数据对我们造成干扰。然后运行一下项目，将DatabaseTest程序重新安装在模拟器上。接着关闭DatabaseTest这个项目，并创建一个新项目ProviderTest，我们将通过这个程序去访问DatabaseTest中的数据。</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vertical<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/addData<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Add To Book<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/queryData<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Query From Book<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/updateData<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Update Book<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/deleteData<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Delete From Book<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!-- src/main/res/layout/activity_main.xml --&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/providertest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>providertest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>SuppressLint</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>net<span class="token punctuation">.</span>Uri</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Log</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>core<span class="token punctuation">.</span>content<span class="token punctuation">.</span>contentValuesOf</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>providertest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding<span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 定义变量</span></span>
<span class="line">    <span class="token keyword">var</span> bookId<span class="token operator">:</span> String<span class="token operator">?</span> <span class="token operator">=</span> <span class="token keyword">null</span></span>
<span class="line"></span>
<span class="line">    <span class="token annotation builtin">@SuppressLint</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Range&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        binding <span class="token operator">=</span> ActivityMainBinding<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>layoutInflater<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">val</span> view <span class="token operator">=</span> binding<span class="token punctuation">.</span>root</span>
<span class="line">        <span class="token function">setContentView</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span></span>
<span class="line">        </span>
<span class="line">        <span class="token comment">// 分别在这4个按钮的点击事件里面处理 增删改查 的逻辑。</span></span>
<span class="line"></span>
<span class="line">        binding<span class="token punctuation">.</span>addData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 添加数据</span></span>
<span class="line">            <span class="token comment">// 首先调用了Uri.parse()方法将一个内容URI解析成Uri对象，然后把要添加的数据都存放到 ContentValues对象中，</span></span>
<span class="line">            <span class="token comment">// 接着调用ContentResolver的insert()方法执行添加操作就可以了。</span></span>
<span class="line">            <span class="token comment">// 注意，insert()方法会返回一个Uri对象，这个对象中包含了新增数据的id，</span></span>
<span class="line">            <span class="token comment">// 我们通过 getPathSegments()方法将这个id取出，稍后会用到它。 </span></span>
<span class="line">            <span class="token keyword">val</span> uri <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;content://com.example.databasetest.provider/book&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">val</span> values <span class="token operator">=</span> <span class="token function">contentValuesOf</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token string-literal singleline"><span class="token string">&quot;name&quot;</span></span> <span class="token keyword">to</span> <span class="token string-literal singleline"><span class="token string">&quot;A Clash of Kings&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                <span class="token string-literal singleline"><span class="token string">&quot;author&quot;</span></span> <span class="token keyword">to</span> <span class="token string-literal singleline"><span class="token string">&quot;George Martin&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;pages&quot;</span></span> <span class="token keyword">to</span> <span class="token number">1040</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;price&quot;</span></span> <span class="token keyword">to</span> <span class="token number">22.85</span></span>
<span class="line">            <span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">val</span> newUri <span class="token operator">=</span> contentResolver<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> values<span class="token punctuation">)</span></span>
<span class="line">            bookId <span class="token operator">=</span> newUri<span class="token operator">?</span><span class="token punctuation">.</span>pathSegments<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        binding<span class="token punctuation">.</span>queryData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 查询数据</span></span>
<span class="line">            <span class="token comment">// 调用了Uri.parse()方法将一个内容URI解析成Uri对象，然后调用 ContentResolver的query()方法查询数据，</span></span>
<span class="line">            <span class="token comment">// 查询的结果当然还是存放在Cursor对象中。之 后对Cursor进行遍历，从中取出查询结果，并打印出来。 </span></span>
<span class="line">            <span class="token keyword">val</span> uri <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;content://com.example.databasetest.provider/book&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            contentResolver<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">moveToNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token keyword">val</span> name <span class="token operator">=</span> <span class="token function">getString</span><span class="token punctuation">(</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;name&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token comment">// 需要 @SuppressLint(&quot;Range&quot;)</span></span>
<span class="line">                    <span class="token keyword">val</span> author <span class="token operator">=</span> <span class="token function">getString</span><span class="token punctuation">(</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;author&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token comment">// 需要 @SuppressLint(&quot;Range&quot;)</span></span>
<span class="line">                    <span class="token keyword">val</span> pages <span class="token operator">=</span> <span class="token function">getInt</span><span class="token punctuation">(</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;pages&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token comment">// 需要 @SuppressLint(&quot;Range&quot;)</span></span>
<span class="line">                    <span class="token keyword">val</span> price <span class="token operator">=</span> <span class="token function">getDouble</span><span class="token punctuation">(</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;price&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment">// 需要 @SuppressLint(&quot;Range&quot;)</span></span>
<span class="line">                    Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;MainActivity&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;book name is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">name</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                    Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;MainActivity&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;book author is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">author</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                    Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;MainActivity&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;book pages is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">pages</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                    Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;MainActivity&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;book price is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">price</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">                <span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        binding<span class="token punctuation">.</span>updateData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 更新数据</span></span>
<span class="line">            <span class="token comment">// 将内容URI解析成Uri对象，然后把想要更新的数据存放到 ContentValues对象中，再调用ContentResolver的update()方法执行更新操作就可以了。</span></span>
<span class="line">            <span class="token comment">// 注意，这里我们为了不想让Book表中的其他行受到影响，在调用Uri.parse()方法时， 给内容URI的尾部增加了一个id，</span></span>
<span class="line">            <span class="token comment">// 而这个id正是添加数据时所返回的。这就表示我们只希望更新刚刚添加的那条数据，Book表中的其他行都不会受影响。 </span></span>
<span class="line">            bookId<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">val</span> uri <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;content://com.example.databasetest.provider/book/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">it</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token keyword">val</span> values <span class="token operator">=</span> <span class="token function">contentValuesOf</span><span class="token punctuation">(</span></span>
<span class="line">                    <span class="token string-literal singleline"><span class="token string">&quot;name&quot;</span></span> <span class="token keyword">to</span> <span class="token string-literal singleline"><span class="token string">&quot;A Storm of Swords&quot;</span></span><span class="token punctuation">,</span></span>
<span class="line">                    <span class="token string-literal singleline"><span class="token string">&quot;pages&quot;</span></span> <span class="token keyword">to</span> <span class="token number">1216</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;price&quot;</span></span> <span class="token keyword">to</span> <span class="token number">24.05</span></span>
<span class="line">                <span class="token punctuation">)</span></span>
<span class="line">                contentResolver<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> values<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        </span>
<span class="line">        binding<span class="token punctuation">.</span>deleteData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 删除数据</span></span>
<span class="line">            <span class="token comment">// 使用同样的方法解析了一个以id结尾的内容URI，然后调用ContentResolver的delete()方法执行删除操作就可以了。</span></span>
<span class="line">            <span class="token comment">// 由于我们在内容URI里指定了一 个id，因此只会删掉拥有相应id的那行数据，Book表中的其他数据都不会受影响。</span></span>
<span class="line">            bookId<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">let</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">val</span> uri <span class="token operator">=</span> Uri<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;content://com.example.databasetest.provider/book/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">it</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                contentResolver<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>uri<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="运行" tabindex="-1"><a class="header-anchor" href="#运行"><span>运行</span></a></h3><p>点击一下“Add To Book”按钮，此时数据就应该已经添加到DatabaseTest程序的数据库中了， 我们可以通过点击“Query From Book”按钮进行检查</p><p><img src="`+r+'" alt="image-20220524221525619"></p><p>然后点击一下“Update Book”按钮更新数据，再点击一下“Query From Book”按钮进行检查</p><p><img src="'+k+'" alt="image-20220524221551709"></p><p>最后点击“Delete From Book”按钮删除数据，此时再点击“Query From Book”按钮就查询不到数据了。</p>',115)]))}const y=s(d,[["render",v]]),m=JSON.parse('{"path":"/blogs/xxbj/Android/8.html","title":"Android - ContentProvider","lang":"en-US","frontmatter":{"title":"Android - ContentProvider","date":"2022-05-25T00:00:00.000Z","tags":["Android"],"categories":["学习笔记"]},"headers":[{"level":2,"title":"在程序运行时申请权限","slug":"在程序运行时申请权限","link":"#在程序运行时申请权限","children":[]},{"level":2,"title":"访问其他程序中的数据","slug":"访问其他程序中的数据","link":"#访问其他程序中的数据","children":[{"level":3,"title":"ContentResolver  增删改查","slug":"contentresolver-增删改查","link":"#contentresolver-增删改查","children":[]}]},{"level":2,"title":"读取联系人","slug":"读取联系人","link":"#读取联系人","children":[{"level":3,"title":"实践","slug":"实践","link":"#实践","children":[]}]},{"level":2,"title":"创建自己的 ContentProvider","slug":"创建自己的-contentprovider","link":"#创建自己的-contentprovider","children":[{"level":3,"title":"创建 ContentProvider 的步骤","slug":"创建-contentprovider-的步骤","link":"#创建-contentprovider-的步骤","children":[]},{"level":3,"title":"实践","slug":"实践-1","link":"#实践-1","children":[]},{"level":3,"title":"测试","slug":"测试","link":"#测试","children":[]},{"level":3,"title":"运行","slug":"运行","link":"#运行","children":[]}]}],"git":{"createdTime":1748156404000,"updatedTime":1748156404000,"contributors":[{"name":"PPPerryPan","email":"perrypan0123@outlook.com","commits":1}]},"filePathRelative":"blogs/xxbj/Android/8.md"}');import.meta.webpackHot&&(import.meta.webpackHot.accept(),__VUE_HMR_RUNTIME__.updatePageData&&__VUE_HMR_RUNTIME__.updatePageData(m));export{y as comp,m as data};
