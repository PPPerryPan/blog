import{_ as n,c as a,a as e,o as p}from"./app-Dh5bFHR3.js";const l="/blog/assets/image-20220511091310066-BM4Mdc1C.png",t="/blog/assets/image-20220511091002066-BKvo8VKc.png",i="/blog/assets/image-20220511091456293-B9NRgiRu.png",o="/blog/assets/image-20220511092253815-EER7iVcj.png",c="/blog/assets/image-20220511092639406-WxUnnZ3F.png",r="/blog/assets/image-20220511085141360-Bk9Ipx4g.png",u="/blog/assets/image-20220511085241350-W0MyvnBX.png",d="/blog/assets/image-20220511085259595-BN2DULI_.png",m={};function h(k,s){return p(),a("div",null,s[0]||(s[0]=[e(`<h2 id="low" tabindex="-1"><a class="header-anchor" href="#low"><span>Low</span></a></h2><p>源代码</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// The page we wish to display</span></span>
<span class="line"><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;page&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看出文件包含是在url通过GET传参的方式获取文件。</p><h3 id="漏洞利用" tabindex="-1"><a class="header-anchor" href="#漏洞利用"><span>漏洞利用</span></a></h3><p>随便从URL中换个文件试试</p><p><img src="`+l+'" alt="image-20220511091310066"></p><p>经过测试发现可以直接获取服务器文件路径：</p><p><img src="'+t+'" alt="image-20220511091002066"></p><p>尝试直接包含一个本地文件，成功。</p><p><img src="'+i+`" alt="image-20220511091456293"></p><h2 id="medium" tabindex="-1"><a class="header-anchor" href="#medium"><span>Medium</span></a></h2><h3 id="源代码" tabindex="-1"><a class="header-anchor" href="#源代码"><span>源代码</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// The page we wish to display</span></span>
<span class="line"><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;page&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Input validation</span></span>
<span class="line"><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span> <span class="token keyword">array</span><span class="token punctuation">(</span> <span class="token string double-quoted-string">&quot;http://&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;https://&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token variable">$file</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span> <span class="token keyword">array</span><span class="token punctuation">(</span> <span class="token string double-quoted-string">&quot;../&quot;</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;..\\&quot;&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token variable">$file</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到，Medium级别的代码增加了str_replace函数，对page参数进行了一定的处理，将”http:// ”、”https://”、 ” ../”、”..\\”替换为空字符，即删除。这里只是过滤了远程包含，但没有过滤本地包含。</p><p>使用str_replace函数是极其不安全的，因为可以使用双写绕过替换规则。例如 <code>page=htthttp://p://</code> 时，str_replace函数会将 <code>http://</code> 删除，于是<code>page=http://</code>，成功执行远程命令。</p><h3 id="漏洞利用-1" tabindex="-1"><a class="header-anchor" href="#漏洞利用-1"><span>漏洞利用</span></a></h3><p>测试本地包含，同Low，成功</p><p><img src="`+o+`" alt="image-20220511092253815"></p><h2 id="high" tabindex="-1"><a class="header-anchor" href="#high"><span>High</span></a></h2><h3 id="源代码-1" tabindex="-1"><a class="header-anchor" href="#源代码-1"><span>源代码</span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token operator">&lt;</span><span class="token operator">?</span>php</span>
<span class="line"></span>
<span class="line"><span class="token comment">// The page we wish to display</span></span>
<span class="line">$file <span class="token operator">=</span> $_GET<span class="token punctuation">[</span> <span class="token string">&#39;page&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Input validation</span></span>
<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">fnmatch</span><span class="token punctuation">(</span> <span class="token string">&quot;file*&quot;</span><span class="token punctuation">,</span> $file <span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> $file <span class="token operator">!=</span> <span class="token string">&quot;include.php&quot;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// This isn&#39;t the page we want!</span></span>
<span class="line">    echo <span class="token string">&quot;ERROR: File not found!&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    exit<span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">?</span><span class="token operator">&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>High级别的代码使用了fnmatch函数检查page参数，要求page参数的开头必须是file，服务器才会去包含相应的文件。 High级别的代码规定只能包含file开头的文件，看似安全，但是依然可以利用file协议绕过防护策略。</p><h3 id="漏洞利用-2" tabindex="-1"><a class="header-anchor" href="#漏洞利用-2"><span>漏洞利用</span></a></h3><p>尝试本地包含，成功。</p><p><img src="`+c+`" alt="image-20220511092639406"></p><h2 id="impossible" tabindex="-1"><a class="header-anchor" href="#impossible"><span>Impossible</span></a></h2><p>源代码</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// The page we wish to display</span></span>
<span class="line"><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;page&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Only allow include.php or file{1..3}.php</span></span>
<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$file</span> <span class="token operator">!=</span> <span class="token string double-quoted-string">&quot;include.php&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$file</span> <span class="token operator">!=</span> <span class="token string double-quoted-string">&quot;file1.php&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$file</span> <span class="token operator">!=</span> <span class="token string double-quoted-string">&quot;file2.php&quot;</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$file</span> <span class="token operator">!=</span> <span class="token string double-quoted-string">&quot;file3.php&quot;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// This isn&#39;t the page we want!</span></span>
<span class="line">    <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;ERROR: File not found!&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">exit</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>分析：</p><p>Impossible级别的代码使用了白名单机制进行防护，page参数必须为“include.php”、“file1.php”、“file2.php”、“file3.php”之一，彻底杜绝了文件包含漏洞。</p><h2 id="常见问题" tabindex="-1"><a class="header-anchor" href="#常见问题"><span>常见问题</span></a></h2><p><img src="`+r+'" alt="image-20220511085141360"></p><p>解决方案：更改PHP配置</p><p><img src="'+u+'" alt="image-20220511085241350"></p><p><img src="'+d+'" alt="image-20220511085241350"></p>',36)]))}const b=n(m,[["render",h]]),g=JSON.parse('{"path":"/blogs/xxbj/Web_Security/Lab4_File_Inclusion.html","title":"DVWA - File Inclusion","lang":"en-US","frontmatter":{"title":"DVWA - File Inclusion","date":"2022-05-12T00:00:00.000Z","tags":["网络安全"],"categories":["学习笔记"]},"headers":[{"level":2,"title":"Low","slug":"low","link":"#low","children":[{"level":3,"title":"漏洞利用","slug":"漏洞利用","link":"#漏洞利用","children":[]}]},{"level":2,"title":"Medium","slug":"medium","link":"#medium","children":[{"level":3,"title":"源代码","slug":"源代码","link":"#源代码","children":[]},{"level":3,"title":"漏洞利用","slug":"漏洞利用-1","link":"#漏洞利用-1","children":[]}]},{"level":2,"title":"High","slug":"high","link":"#high","children":[{"level":3,"title":"源代码","slug":"源代码-1","link":"#源代码-1","children":[]},{"level":3,"title":"漏洞利用","slug":"漏洞利用-2","link":"#漏洞利用-2","children":[]}]},{"level":2,"title":"Impossible","slug":"impossible","link":"#impossible","children":[]},{"level":2,"title":"常见问题","slug":"常见问题","link":"#常见问题","children":[]}],"git":{"createdTime":1748156404000,"updatedTime":1748156404000,"contributors":[{"name":"PPPerryPan","email":"perrypan0123@outlook.com","commits":1}]},"filePathRelative":"blogs/xxbj/Web_Security/Lab4_File_Inclusion.md"}');import.meta.webpackHot&&(import.meta.webpackHot.accept(),__VUE_HMR_RUNTIME__.updatePageData&&__VUE_HMR_RUNTIME__.updatePageData(g));export{b as comp,g as data};
