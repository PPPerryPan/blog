import{_ as s,c as a,a as t,o as p}from"./app-Dh5bFHR3.js";const e="/blog/assets/image-20220512180825913-BkH_HfRZ.png",l="/blog/assets/image-20220512180949549-CUnI4u8o.png",i="/blog/assets/image-20220512200302300-K_4wvB3L.png",o="/blog/assets/image-20220513180544022-DQ13g8a5.png",c="/blog/assets/image-20220513195026342-BoaDIAnu.png",u="/blog/assets/image-20220514193805558-keSFn9ni.png",r="/blog/assets/image-20220514194434028-utqUZDO_.png",d="/blog/assets/image-20220514195157200-DAYaL7jI.png",k="/blog/assets/image-20220514195404835-UU1tbCFG.png",v="/blog/assets/image-20220514195503746-Hs1jbqdV.png",m="/blog/assets/image-20220514211619219-BqhdRdII.png",b="/blog/assets/image-20220514214648030-Bc3QKvUX.png",g="/blog/assets/image-20220514220529914-BXTCkU91.png",y="/blog/assets/image-20220515204152525-DZIchcnA.png",h="/blog/assets/image-20220516002204383-BqRD6R2h.png",q={};function f(x,n){return p(),a("div",null,n[0]||(n[0]=[t(`<h1 id="文件" tabindex="-1"><a class="header-anchor" href="#文件"><span>文件</span></a></h1><h2 id="文件存取" tabindex="-1"><a class="header-anchor" href="#文件存取"><span>文件存取</span></a></h2><h3 id="文件存储" tabindex="-1"><a class="header-anchor" href="#文件存储"><span>文件存储</span></a></h3><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token comment">&lt;!-- src/main/res/layout/activity_main.xml --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vertical<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EditText</span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/editText<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>hint</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Type something here<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/filepersistencetest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>filepersistencetest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>filepersistencetest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>BufferedWriter</span>
<span class="line"><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>IOException</span>
<span class="line"><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>OutputStreamWriter</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding<span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        binding <span class="token operator">=</span> ActivityMainBinding<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>layoutInflater<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">val</span> view <span class="token operator">=</span> binding<span class="token punctuation">.</span>root</span>
<span class="line">        <span class="token function">setContentView</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 返回键 退出程序时调用，将数据保存起来</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onDestroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">val</span> intputText <span class="token operator">=</span> binding<span class="token punctuation">.</span>editText<span class="token punctuation">.</span>text<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span>	<span class="token comment">// 1. 获取EditText中输入的内容</span></span>
<span class="line">        <span class="token function">save</span><span class="token punctuation">(</span>intputText<span class="token punctuation">)</span>	<span class="token comment">// 2. 调用save()方法把输入的内容存储到文件中</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    </span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">save</span><span class="token punctuation">(</span>inputText<span class="token operator">:</span> String<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// 通过openFileOutput()方法得到一个FileOutputStream对象，</span></span>
<span class="line">            <span class="token keyword">val</span> output <span class="token operator">=</span> <span class="token function">openFileOutput</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;data&quot;</span></span><span class="token punctuation">,</span> Context<span class="token punctuation">.</span>MODE_PRIVATE<span class="token punctuation">)</span>	<span class="token comment">// 3. 文件命名为data</span></span>
<span class="line">            </span>
<span class="line">            <span class="token comment">// 然后借助它构建出一个OutputStreamWriter对象，接着再使用OutputStreamWriter构建出一个BufferedWriter对象，</span></span>
<span class="line">            <span class="token comment">// 这样就可以通过BufferedWriter将文本内容写入文件中了。</span></span>
<span class="line">            <span class="token keyword">val</span> writer <span class="token operator">=</span> <span class="token function">BufferedWriter</span><span class="token punctuation">(</span><span class="token function">OutputStreamWriter</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            writer<span class="token punctuation">.</span><span class="token function">use</span> <span class="token punctuation">{</span> it<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>inputText<span class="token punctuation">)</span> <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> IOException<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行程序，并往输入框内写数据。</p><p><img src="`+e+'" alt="image-20220512180825913"></p><p>然后用返回键退出程序，打开 Device File Explorer 查看程序目录\\file下的data文件内容，即可看到刚才写入的内容</p><p><img src="'+l+`" alt="image-20220512180949549"></p><h3 id="文件读取" tabindex="-1"><a class="header-anchor" href="#文件读取"><span>文件读取</span></a></h3><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/filepersistencetest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>filepersistencetest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>Toast</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>filepersistencetest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span><span class="token operator">*</span></span>
<span class="line"><span class="token keyword">import</span> java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>StringBuilder</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding<span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        </span>
<span class="line">        <span class="token operator">..</span><span class="token operator">..</span><span class="token operator">..</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">val</span> inputText <span class="token operator">=</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>inputText<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            binding<span class="token punctuation">.</span>editText<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span>inputText<span class="token punctuation">)</span></span>
<span class="line">            binding<span class="token punctuation">.</span>editText<span class="token punctuation">.</span><span class="token function">setSelection</span><span class="token punctuation">(</span>inputText<span class="token punctuation">.</span>length<span class="token punctuation">)</span></span>
<span class="line">            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Restoring succeeded&quot;</span></span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_LONG<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">fun</span> <span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> String <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">val</span> content <span class="token operator">=</span> <span class="token function">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 通过openFileInput()方法获取了一个FileInputStream对象</span></span>
<span class="line">            <span class="token keyword">val</span> input <span class="token operator">=</span> <span class="token function">openFileInput</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;data&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token comment">// 然后借助它构建出一个InputStreamReader对象，接着再使用InputStreamReader构建出一个BufferedReader对象</span></span>
<span class="line">            <span class="token comment">// 这样通过BufferedReader就能将文件中的数据一行行读取出来，并拼接到StringBuilder对象当中</span></span>
<span class="line">            <span class="token keyword">val</span> reader <span class="token operator">=</span> <span class="token function">BufferedReader</span><span class="token punctuation">(</span><span class="token function">InputStreamReader</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            reader<span class="token punctuation">.</span><span class="token function">use</span> <span class="token punctuation">{</span></span>
<span class="line">                reader<span class="token punctuation">.</span><span class="token function">forEachLine</span> <span class="token punctuation">{</span></span>
<span class="line">                    content<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>it<span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token operator">:</span> IOException<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token comment">// 最后将读取的内容返回就可以了</span></span>
<span class="line">        <span class="token keyword">return</span> content<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token operator">..</span><span class="token operator">..</span><span class="token operator">..</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行程序，可知，程序读取了data文件，将上面输入的123456自动填充到了editText中</p><p><img src="`+i+`" alt="image-20220512200302300"></p><h2 id="sharedpreferences-存储" tabindex="-1"><a class="header-anchor" href="#sharedpreferences-存储"><span>SharedPreferences 存储</span></a></h2><p>SharedPreferences是使用键值对的方式来存储数据的。</p><p>保存一条数据的时候，需要给这条数据提供一个对应的键，这样在读取数据的时候就可以通过这个键把相应的值取出来。</p><p>而且SharedPreferences还支持多种不同的数据类型存储。</p><p>注：存储时使用什么数据类型，读取时则是什么数据类型</p><h3 id="数据存储" tabindex="-1"><a class="header-anchor" href="#数据存储"><span>数据存储</span></a></h3><p>要想使用SharedPreferences存储数据，首先需要获取SharedPreferences对象。</p><p>Android 中主要提供了以下两种方法用于得到SharedPreferences对象。</p><p><strong>Context类中的 <code>getSharedPreferences()</code> 方法</strong></p><p>接收两个参数：</p><ol><li><p>第一个参数用于指定SharedPreferences文件的名称，如果指定的文件不存在则会创建一个，SharedPreferences 文件存放在 <code>/data/data/&lt;package name&gt;/shared_prefs/</code> ；</p></li><li><p>第二个参数用于指定操作模式，目前只有默认的 MODE_PRIVATE 这一种模式可选，它和直接传入 0 的效果是相同的，表示只有当前的应用程序才可以对这个 SharedPreferences 文件进行读写。</p></li></ol><p><strong>Activity类中的 <code>getPreferences()</code> 方法</strong></p><p>这个方法和 Context 中的 getSharedPreferences() 方法很相似，不过它只接收一个操作模式参数，因为使用这个方法时会自动将当前 Activity 的类名作为 SharedPreferences的文件名。</p><p>得到了 SharedPreferences 对象之后，就可以开始向 SharedPreferences 文件中存储数据了，主要可以分为3步实现。</p><ol><li>调用 SharedPreferences 对象的 <code>edit()</code> 方法获取一个 SharedPreferences.Editor对象。</li><li>向 SharedPreferences.Editor 对象中添加数据，比如添加一个布尔型数据就使用 <code>putBoolean()</code> 方法，添加一个字符串则使用 <code>putString()</code> 方法等。</li><li>调用 <code>apply()</code> 方法将添加的数据提交，从而完成数据存储操作。</li></ol><p><strong>实例</strong></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token comment">&lt;!-- src/main/res/layout/activity_main.xml --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vertical<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/saveButton<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Save Data<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/sharedpreferencestest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>sharedpreferencestest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>sharedpreferencestest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding<span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        binding <span class="token operator">=</span> ActivityMainBinding<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>layoutInflater<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">val</span> view <span class="token operator">=</span> binding<span class="token punctuation">.</span>root</span>
<span class="line">        <span class="token function">setContentView</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        binding<span class="token punctuation">.</span>saveButton<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 通过 getSharedPreferences() 方法指定 SharedPreferences 的文件名为 data ，并得到 SharedPreferences.Editor 对象</span></span>
<span class="line">            <span class="token keyword">val</span> editor <span class="token operator">=</span> <span class="token function">getSharedPreferences</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;data&quot;</span></span><span class="token punctuation">,</span> Context<span class="token punctuation">.</span>MODE_PRIVATE<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">edit</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token comment">// 向这个对象中添加了3条不同类型的数据</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putString</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;name&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Tom&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putInt</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;age&quot;</span></span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">)</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">putBoolean</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;married&quot;</span></span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token comment">// 调用 apply() 方法进行提交</span></span>
<span class="line">            editor<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行程序，点击 Save Data按钮，并到 Explorer 中查看</p><p><img src="`+o+`" alt="image-20220513180544022"></p><h3 id="数据读取" tabindex="-1"><a class="header-anchor" href="#数据读取"><span>数据读取</span></a></h3><p>SharedPreferences对象中 提供了一系列的get方法，用于读取存储的数据；</p><p>每种get方法都对应了 SharedPreferences.Editor中的一种put方法，比如读取一个布尔型数据就使用 getBoolean()方法，读取一个字符串就使用getString()方法。</p><p>这些get方法都接收两个参数：</p><ul><li><p>第一个参数是键，传入存储数据时使用的键就可以得到相应的值了；</p></li><li><p>第二个参数是默认值，即表示当传入的键找不到对应的值时会以什么样的默认值进行返回。</p></li></ul><p><strong>实例</strong></p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token comment">&lt;!-- src/main/res/layout/activity_main.xml --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vertical<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    ......</span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/restoreButton<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Restore Data<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>TextView</span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/text<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/sharedpreferencestest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>sharedpreferencestest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>sharedpreferencestest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding<span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        </span>
<span class="line">        <span class="token operator">..</span><span class="token operator">..</span><span class="token operator">..</span></span>
<span class="line"></span>
<span class="line">        binding<span class="token punctuation">.</span>restoreButton<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// 首先通过 getSharedPreferences() 方法得到 SharedPreferences 对象</span></span>
<span class="line">            <span class="token keyword">val</span> prefs <span class="token operator">=</span> <span class="token function">getSharedPreferences</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;data&quot;</span></span><span class="token punctuation">,</span> Context<span class="token punctuation">.</span>MODE_PRIVATE<span class="token punctuation">)</span></span>
<span class="line">            <span class="token comment">// 然后分别调用它的 getString() 、getInt() 和 getBoolean() 方法，去获取前面所存储的姓名、年龄和是否已婚。</span></span>
<span class="line">            <span class="token comment">// 如果没有找到相应的值，就会使用方法中传入的默认值来代替</span></span>
<span class="line">            <span class="token keyword">val</span> name <span class="token operator">=</span> prefs<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;name&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">val</span> age <span class="token operator">=</span> prefs<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;age&quot;</span></span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">val</span> married <span class="token operator">=</span> prefs<span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;married&quot;</span></span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token comment">// 最后在 TextView 中显示出来</span></span>
<span class="line">            binding<span class="token punctuation">.</span>text<span class="token punctuation">.</span><span class="token function">setText</span><span class="token punctuation">(</span></span>
<span class="line">                <span class="token string-literal singleline"><span class="token string">&quot;name is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">name</span></span><span class="token string"> \\n&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">                <span class="token string-literal singleline"><span class="token string">&quot;age is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">age</span></span><span class="token string"> \\n&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">                <span class="token string-literal singleline"><span class="token string">&quot;married is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">married</span></span><span class="token string"> \\n&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+c+`" alt="image-20220513195026342"></p><h3 id="记住密码功能-以后再补" tabindex="-1"><a class="header-anchor" href="#记住密码功能-以后再补"><span><s>记住密码功能 (以后再补)</s></span></a></h3><h3 id="sqlite数据库" tabindex="-1"><a class="header-anchor" href="#sqlite数据库"><span>SQLite数据库</span></a></h3><h4 id="创建数据库" tabindex="-1"><a class="header-anchor" href="#创建数据库"><span><strong>创建数据库</strong></span></a></h4><p>Android 中存在 SQLiteOpenHelper 帮助类，借助这个类可以非常简单地对数据库进行创建和升级。</p><p>SQLiteOpenHelper是一个抽象类，这意味着如果我们想要使用它，就需要创建一个自己的帮助类去继承它。SQLiteOpenHelper中有两个抽象方法：<code>onCreate()</code>和 <code>onUpgrade()</code> 。我们必须在自己的帮助类里重写这两个方法，然后分别在这两个方法中实现创建和升级数据库的逻辑。</p><p>SQLiteOpenHelper中还有两个非常重要的实例方法：<code>getReadableDatabase()</code> 和 <code>getWritableDatabase()</code> 。这两个方法都可以创建或打开一个现有的数据库（如果数据库已 存在则直接打开，否则要创建一个新的数据库），并返回一个可对数据库进行读写操作的对象。</p><p>不同的是，当数据库不可写入的时候（如磁盘空间已满），getReadableDatabase() 方法返回的对象将以只读的方式打开数据库，而 getWritableDatabase() 方法则将出现异常。</p><p>SQLiteOpenHelper中有两个构造方法可供重写，一般使用参数少一点的那个构造方法即可。 这个构造方法中接收4个参数：</p><ul><li>第一个参数是<strong>Context</strong>，这个没什么好说的，必须有它才能对数据库进行操作；</li><li>第二个参数是<strong>数据库名</strong>，创建数据库时使用的就是这里指定的名称；</li><li>第三个参数允许我们在查询数据的时候返回一个自定义的Cursor，<strong>一般传入 null 即可</strong>；</li><li>第四个参数表示 当前<strong>数据库的版本号</strong>，可用于对数据库进行升级操作。</li></ul><p>构建出 SQLiteOpenHelper 的实例之 后，再调用它的 <code>getReadableDatabase()</code> 或 <code>getWritableDatabase()</code> 方法就能够创建数据库了，数据库文件会存放在 <code>/data/data/&lt;package name&gt;/databases/</code> 目录下。</p><p>此时，重写的 <code>onCreate()</code> 方法也会得到执行，所以通常会在这里处理一些创建表的逻辑。</p><p>例：创建一个名为BookStore.db的数据库，然后在这个数据库中新建一张Book表， 表中有id（主键）、作者、价格、页数和书名等列</p><div class="language-sqlite line-numbers-mode" data-highlighter="prismjs" data-ext="sqlite" data-title="sqlite"><pre><code><span class="line">create table Book ( </span>
<span class="line">	id integer primary key autoincrement, </span>
<span class="line">	author text, </span>
<span class="line">	price real, </span>
<span class="line">	pages integer,</span>
<span class="line">	name text)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述语句中，integer表示整型，real表示 浮点型，text表示文本类型，blob表示二进制类型。</p><p>primary key 将 id 列设为主键，并用 autoincrement 关键字表示id列是自增长的。</p><p>需要在代码中执行这条 SQL 语句，才能完成创建表的操作。新建 MyDatabaseHelper 类 继承自 SQLiteOpenHelper</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/databasetest/MyDatabaseHelper.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span>SQLiteDatabase</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span>SQLiteOpenHelper</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>Toast</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token function">MyDatabaseHelper</span><span class="token punctuation">(</span><span class="token keyword">var</span> context<span class="token operator">:</span> Context<span class="token punctuation">,</span> name<span class="token operator">:</span> String<span class="token punctuation">,</span> version<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token operator">:</span></span>
<span class="line">    <span class="token function">SQLiteOpenHelper</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> version<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> createBook <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Create table Book (&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot; id integer primary key autoincrement,&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;author text,&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;price real,&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;pages integer,&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;name text)&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>db<span class="token operator">:</span> SQLiteDatabase<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        db<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span>createBook<span class="token punctuation">)</span></span>
<span class="line">        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Create succeeded&quot;</span></span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_LONG<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onUpgrade</span><span class="token punctuation">(</span>p0<span class="token operator">:</span> SQLiteDatabase<span class="token operator">?</span><span class="token punctuation">,</span> p1<span class="token operator">:</span> Int<span class="token punctuation">,</span> p2<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述语句把建表语句定义成了一个字符串变量，然后在 <code>onCreate()</code> 方法中又调用了 SQLiteDatabase 的 <code>execSQL()</code> 方法去执行这条建表语句，并弹出一个Toast提示创建成功，这样就可以保证在数据库创建完成的同时还能成功创建 Book 表。</p><p>修改布局：</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token comment">&lt;!-- src/main/res/layout/activity_main.xml --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vertical<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/createDatabase<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Create Database<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>MainActivity</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/databasetest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding <span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">setContentView</span><span class="token punctuation">(</span>R<span class="token punctuation">.</span>layout<span class="token punctuation">.</span>activity_main<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        binding <span class="token operator">=</span> ActivityMainBinding<span class="token punctuation">.</span><span class="token function">inflate</span><span class="token punctuation">(</span>layoutInflater<span class="token punctuation">)</span></span>
<span class="line">        <span class="token keyword">val</span> view <span class="token operator">=</span> binding<span class="token punctuation">.</span>root</span>
<span class="line">        <span class="token function">setContentView</span><span class="token punctuation">(</span>view<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">val</span> dbHelper <span class="token operator">=</span> <span class="token function">MyDatabaseHelper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;BookStore.db&quot;</span></span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span></span>
<span class="line">        binding<span class="token punctuation">.</span>createDatabase<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span> dbHelper<span class="token punctuation">.</span>writableDatabase <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在 <code>onCreate()</code> 方法中构建 MyDatabaseHelper 对象，并且通过构造函数的参 数将数据库名指定为 BookStore.db，版本号指定为1，</p><p>然后在“Create Database”按钮的点击事件里调用 <code>getWritableDatabase()</code> 方法。</p><p>这样当第一次点击 “Create Database” 按钮 时，就会检测到当前程序中并没有BookStore.db这个数据库，于是会创建该数据库并调用 MyDatabaseHelper 中的 <code>onCreate()</code> 方法，这样Book表也就创建好了，然后会弹出一个 Toast提示创建成功。</p><p>再次点击“Create Database”按钮时，会发现此时已经存在 BookStore.db 数据库了，因此不会再创建一次。</p><p><img src="`+u+'" alt="image-20220514193805558"></p><p>文件管理器中也能够找到该数据库</p><p><img src="'+r+'" alt="image-20220514194434028"></p><p>安装插件：Database Navigator</p><p>导入数据库</p><p><img src="'+d+'" alt="image-20220514195157200"></p><p><img src="'+k+'" alt="image-20220514195404835"></p><p>查看数据库</p><p><img src="'+v+`" alt="image-20220514195503746"></p><h4 id="升级数据库" tabindex="-1"><a class="header-anchor" href="#升级数据库"><span>升级数据库</span></a></h4><p>MyDatabaseHelper 中的空方法<code>onUpgrade()</code> ，用于对数据库进行升级。</p><p>目前，DatabaseTest 项目中已经有一张Book表用于存放书的各种详细数据，如果我们想再添加一张Category表用于记录图书的分类？</p><p>比如Category表中有id（主键）、分类名和分类代码这几个列，那么建表语句就可以写成：</p><div class="language-sqlite line-numbers-mode" data-highlighter="prismjs" data-ext="sqlite" data-title="sqlite"><pre><code><span class="line">create table Category (</span>
<span class="line">	id integer primary key autoincrement,</span>
<span class="line">	category_name text,</span>
<span class="line">	category_code integer)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将建表语句添加到 MyDatabaseHelper 中：</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/databasetest/MyDatabaseHelper.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>Context</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span>SQLiteDatabase</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>database<span class="token punctuation">.</span>sqlite<span class="token punctuation">.</span>SQLiteOpenHelper</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>Toast</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> <span class="token function">MyDatabaseHelper</span><span class="token punctuation">(</span><span class="token keyword">var</span> context<span class="token operator">:</span> Context<span class="token punctuation">,</span> name<span class="token operator">:</span> String<span class="token punctuation">,</span> version<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token operator">:</span></span>
<span class="line">    <span class="token function">SQLiteOpenHelper</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> name<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> version<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 变量：创建 Book 表</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> createBook <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;Create table Book (&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot; id integer primary key autoincrement,&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;author text,&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;price real,&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;pages integer,&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;name text)&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 变量：创建 Category 表</span></span>
<span class="line">    <span class="token keyword">private</span> <span class="token keyword">val</span> createCategory <span class="token operator">=</span> <span class="token string-literal singleline"><span class="token string">&quot;create table Category (&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;id integer primary key autoincrement,&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;category_name text,&quot;</span></span> <span class="token operator">+</span></span>
<span class="line">            <span class="token string-literal singleline"><span class="token string">&quot;category_code integer)&quot;</span></span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>db<span class="token operator">:</span> SQLiteDatabase<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 将 createBook 传给 SQLite 执行</span></span>
<span class="line">        db<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span>createBook<span class="token punctuation">)</span></span>
<span class="line">        <span class="token comment">// 将 createCategory 传给 SQlite 执行</span></span>
<span class="line">        db<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span>createCategory<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Create succeeded&quot;</span></span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_LONG<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onUpgrade</span><span class="token punctuation">(</span>db<span class="token operator">:</span> SQLiteDatabase<span class="token operator">?</span><span class="token punctuation">,</span> oldVersion<span class="token operator">:</span> Int<span class="token punctuation">,</span> newVersion<span class="token operator">:</span> Int<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 例用升级功能，将旧表删除，然后调用 onCreate() 建新表</span></span>
<span class="line">        db<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;drop table if exists Book&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        db<span class="token operator">?</span><span class="token punctuation">.</span><span class="token function">execSQL</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;drop table if exists Category&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token function">onCreate</span><span class="token punctuation">(</span>db<span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要让 <code>onUpgrade()</code> 执行，在 MainActivity 中将版本号改大即可：</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/databasetest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding <span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token operator">..</span><span class="token operator">..</span><span class="token operator">..</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">val</span> dbHelper <span class="token operator">=</span> <span class="token function">MyDatabaseHelper</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;BookStore.db&quot;</span></span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">        <span class="token operator">..</span><span class="token operator">..</span><span class="token operator">..</span></span>
<span class="line">        </span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行并再次点击 Create Database，然后导出查看数据库</p><p><img src="`+m+`" alt="image-20220514211619219"></p><h4 id="添加数据" tabindex="-1"><a class="header-anchor" href="#添加数据"><span>添加数据</span></a></h4><p>调用SQLiteOpenHelper的<code>getReadableDatabase()</code>或 <code>getWritableDatabase()</code>方法是可以用于创建和升级数据库的，不仅如此，这两个方法还都 会返回一个SQLiteDatabase对象，借助这个对象就可以对数据进行CRUD操作了。</p><p>SQLiteDatabase中提供了一个 <code>insert()</code> 方法，专门用于添加数据。它接收3个参数：</p><p>第一个参数是表名，我们希望向哪张表里添加数据，这里就传入该表的名字；</p><p>第二个参数用于在未指定添加数据的情况下给某些可为空的列自动赋值NULL，一般我们用不到这个功能，直接传入null即可；</p><p>第三个参数是一个 ContentValues对象，它提供了一系列的<code>put()</code>方法重载，用于向ContentValues中添加数据，只需要将表中的每个列名以及相应的待添加数据传入即可。</p><p>在布局文件 src/main/res/layout/activity_main.xml 中加入按钮</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/addData<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Add Data<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加按钮点击事件</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/databasetest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding <span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token operator">..</span><span class="token operator">..</span><span class="token operator">..</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 增加数据</span></span>
<span class="line">        binding<span class="token punctuation">.</span>addData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">val</span> db <span class="token operator">=</span> dbHelper<span class="token punctuation">.</span>writableDatabase</span>
<span class="line">            <span class="token keyword">val</span> values1 <span class="token operator">=</span> <span class="token function">ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 开始组装第一条数据</span></span>
<span class="line">                <span class="token function">put</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;name&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;The Da Vinci Code&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">put</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;author&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Dan Brown&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">put</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;pages&quot;</span></span><span class="token punctuation">,</span> <span class="token number">454</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">put</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;price&quot;</span></span><span class="token punctuation">,</span> <span class="token number">16.96</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token comment">// 插入第一条数据：</span></span>
<span class="line">            db<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Book&quot;</span></span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> values1<span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line">            <span class="token keyword">val</span> values2 <span class="token operator">=</span> <span class="token function">ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">apply</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token comment">// 开始组装第二条数据</span></span>
<span class="line">                <span class="token function">put</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;name&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;The Lost Symbol&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">put</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;author&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Dan Brown&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">put</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;pages&quot;</span></span><span class="token punctuation">,</span> <span class="token number">510</span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token function">put</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;price&quot;</span></span><span class="token punctuation">,</span> <span class="token number">19.95</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            <span class="token comment">// 插入第二条数据</span></span>
<span class="line">            db<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Book&quot;</span></span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> values2<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>先获取了SQLiteDatabase对象，然后使用 ContentValues对要添加的数据进行组装。</p><p>如果你比较细心的话，应该会发现这里只对Book 表里其中4列的数据进行了组装，id那一列并没给它赋值。这是因为在前面创建表的时候，我们 就将id列设置为自增长了，它的值会在入库的时候自动生成，所以不需要手动赋值了。</p><p>接下来调用了insert()方法将数据添加到表当中</p><p>运行后点击 Add Data，然后导出数据库 并双击Book查看表内容，可见数据已成功插入</p><p><img src="`+b+`" alt="image-20220514214648030"></p><h4 id="更新数据" tabindex="-1"><a class="header-anchor" href="#更新数据"><span>更新数据</span></a></h4><p>SQLiteDatabase 中提供了一个非常好用的 <code>update()</code> 方法，用于对数据进行更新。这个方法接收4个参数：</p><p>第一个参数和 <code>insert()</code> 方法一样，也是表名，指定更新哪张表里的数据；</p><p>第二个参数是 ContentValues 对象，要把更新数据在这里组装进去；</p><p>第三、第四个参数用于约束更新某一行或某几行中的数据，不指定的话默认会更新所有行。</p><p>比如刚才添加到数据库里的第一本书，由于过了畅销季，卖得不是很火了，现在需要通过降低价格的方式来吸引更多的顾客</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>LinearLayout</span> <span class="token attr-name"><span class="token namespace">xmlns:</span>android</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://schemas.android.com/apk/res/android<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>orientation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vertical<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line">    ......</span>
<span class="line"></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/updateData<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">        <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Update Data<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>LinearLayout</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span>
<span class="line"><span class="token comment">&lt;!-- src/main/res/layout/activity_main.xml --&gt;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/databasetest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>Toast</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding <span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token operator">..</span><span class="token operator">..</span><span class="token operator">..</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 更新数据</span></span>
<span class="line">        binding<span class="token punctuation">.</span>updateData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span></span>
<span class="line">            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Upadating&quot;</span></span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">val</span> db <span class="token operator">=</span> dbHelper<span class="token punctuation">.</span>writableDatabase</span>
<span class="line">            <span class="token keyword">val</span> values <span class="token operator">=</span> <span class="token function">ContentValues</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">            values<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;price&quot;</span></span><span class="token punctuation">,</span> <span class="token number">10.99</span><span class="token punctuation">)</span></span>
<span class="line">            db<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Book&quot;</span></span><span class="token punctuation">,</span> values<span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;name = ?&quot;</span></span><span class="token punctuation">,</span> <span class="token function">arrayOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;The Da Vinci Code&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Updated&quot;</span></span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行，点击 Update Data ，并导出数据库查看，可见数据已成功更新：</p><p><img src="`+g+`" alt="image-20220514220529914"></p><h4 id="删除数据" tabindex="-1"><a class="header-anchor" href="#删除数据"><span>删除数据</span></a></h4><p>在布局中添加按钮</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/deleteData<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Delete Data<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>添加点击事件</p><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/databasetest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>Toast</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding <span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token operator">..</span><span class="token operator">..</span><span class="token operator">..</span></span>
<span class="line">    </span>
<span class="line">        <span class="token comment">// 删除数据</span></span>
<span class="line">        binding<span class="token punctuation">.</span>deleteData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">val</span> db <span class="token operator">=</span> dbHelper<span class="token punctuation">.</span>writableDatabase</span>
<span class="line">            <span class="token comment">// 第一个个参数：删除Book表中的数据；</span></span>
<span class="line">            <span class="token comment">// 第二、第三个参数来：指定仅删除那些页数超过500页的书</span></span>
<span class="line">            db<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Book&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;pages &gt; ?&quot;</span></span><span class="token punctuation">,</span> <span class="token function">arrayOf</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;500&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            Toast<span class="token punctuation">.</span><span class="token function">makeText</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Deleted&quot;</span></span><span class="token punctuation">,</span> Toast<span class="token punctuation">.</span>LENGTH_SHORT<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>运行程序，并点击 “Delete Data”，导出并查看数据库，可见 The Lost Symbol 这本书的页数超过500页的书，记录已被删除</p><p><img src="`+y+`" alt="image-20220515204152525"></p><h4 id="查询数据" tabindex="-1"><a class="header-anchor" href="#查询数据"><span>查询数据</span></a></h4><p>SQLiteDatabase 中还提供了一个 <code>query()</code> 方法用于对数据进行查询。这个方法的参数非常复杂，最短的一个方法重载也需要传入7个参数。</p><p>第一个参数：表名，表示我们希望从哪张表中查询数据。</p><p>第二个参数用于指定去查询哪几列，如果不指定则默认查询所有列。</p><p>第三、第四个参数用于约 束查询某一行或某几行的数据，不指定则默认查询所有行的数据。</p><p>第五个参数用于指定需要去 group by 的列，不指定则表示不对查询结果进行group by操作。</p><p>第六个参数用于对 group by 之后的数据进行进一步的过滤，不指定则表示不进行过滤。</p><p>第七个参数用于指定查询结果的排序方式，不指定则表示使用默认的排序方式。</p><table><thead><tr><th style="text-align:left;">query() 方法参数</th><th style="text-align:left;">对应 SQL 部分</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">table</td><td style="text-align:left;">from table_name</td><td style="text-align:left;">指定查询的表名</td></tr><tr><td style="text-align:left;">columns</td><td style="text-align:left;">select column1, column2</td><td style="text-align:left;">指定查询的列名</td></tr><tr><td style="text-align:left;">selection</td><td style="text-align:left;">where column = value</td><td style="text-align:left;">指定 where 的约束条件</td></tr><tr><td style="text-align:left;">selectionArgs</td><td style="text-align:left;">-</td><td style="text-align:left;">为 where 中的占位符提供举例的值</td></tr><tr><td style="text-align:left;">groupBy</td><td style="text-align:left;">group by column</td><td style="text-align:left;">指定需要 group by 的列</td></tr><tr><td style="text-align:left;">having</td><td style="text-align:left;">having column = value</td><td style="text-align:left;">对 group by 后的结果进一步约束</td></tr><tr><td style="text-align:left;">orderBy</td><td style="text-align:left;">order by column1, column2</td><td style="text-align:left;">指定查询结果的排序方式</td></tr></tbody></table><p>虽然query()方法的参数非常多，但不必为每条查询语句都指 定所有的参数，多数情况下只需要传入少数几个参数就可以完成查询操作了。</p><p>调用query()方法后会返回一个Cursor对象，查询到的所有数据都将从这个对象中取出。</p><div class="language-xml line-numbers-mode" data-highlighter="prismjs" data-ext="xml" data-title="xml"><pre><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>@+id/queryData<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>match_parent<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>layout_height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>wrap_content<span class="token punctuation">&quot;</span></span></span>
<span class="line">    <span class="token attr-name"><span class="token namespace">android:</span>text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>Query Data<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-kotlin line-numbers-mode" data-highlighter="prismjs" data-ext="kt" data-title="kt"><pre><code><span class="line"><span class="token comment">// src/main/java/com/example/databasetest/MainActivity.kt</span></span>
<span class="line"><span class="token keyword">package</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest</span>
<span class="line"></span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>SuppressLint</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>content<span class="token punctuation">.</span>ContentValues</span>
<span class="line"><span class="token keyword">import</span> androidx<span class="token punctuation">.</span>appcompat<span class="token punctuation">.</span>app<span class="token punctuation">.</span>AppCompatActivity</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>os<span class="token punctuation">.</span>Bundle</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Log</span>
<span class="line"><span class="token keyword">import</span> android<span class="token punctuation">.</span>widget<span class="token punctuation">.</span>Toast</span>
<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>example<span class="token punctuation">.</span>databasetest<span class="token punctuation">.</span>databinding<span class="token punctuation">.</span>ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">private</span> <span class="token keyword">lateinit</span> <span class="token keyword">var</span> binding <span class="token operator">:</span> ActivityMainBinding</span>
<span class="line"></span>
<span class="line"><span class="token keyword">class</span> MainActivity <span class="token operator">:</span> <span class="token function">AppCompatActivity</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token annotation builtin">@SuppressLint</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Range&quot;</span></span><span class="token punctuation">)</span>		<span class="token comment">// 需要添加此行</span></span>
<span class="line">    <span class="token keyword">override</span> <span class="token keyword">fun</span> <span class="token function">onCreate</span><span class="token punctuation">(</span>savedInstanceState<span class="token operator">:</span> Bundle<span class="token operator">?</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token operator">..</span><span class="token operator">..</span><span class="token operator">..</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 查找数据</span></span>
<span class="line">        binding<span class="token punctuation">.</span>queryData<span class="token punctuation">.</span><span class="token function">setOnClickListener</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">val</span> db <span class="token operator">=</span> dbHelper<span class="token punctuation">.</span>writableDatabase</span>
<span class="line">            <span class="token comment">// 查询 Book 表中的所有数据</span></span>
<span class="line">            <span class="token keyword">val</span> cursor <span class="token operator">=</span> db<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;Book&quot;</span></span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">moveToFirst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">                <span class="token keyword">do</span> <span class="token punctuation">{</span></span>
<span class="line">                    <span class="token comment">// 遍历 Cursor 对象</span></span>
<span class="line">                    <span class="token keyword">val</span> name <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;name&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>      <span class="token comment">// 需要添加：@SuppressLint(&quot;Range&quot;)</span></span>
<span class="line">                    <span class="token keyword">val</span> author <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;author&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// 需要添加：@SuppressLint(&quot;Range&quot;)</span></span>
<span class="line">                    <span class="token keyword">val</span> pages <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getInt</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;pages&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                    <span class="token keyword">val</span> price <span class="token operator">=</span> cursor<span class="token punctuation">.</span><span class="token function">getDouble</span><span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">getColumnIndex</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;price&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">                    Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;MainActivity&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Book name is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">name</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                    Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;MainActivity&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;book author is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">author</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                    Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;MainActivity&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;Book pages is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">pages</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                    Log<span class="token punctuation">.</span><span class="token function">d</span><span class="token punctuation">(</span><span class="token string-literal singleline"><span class="token string">&quot;MainActivity&quot;</span></span><span class="token punctuation">,</span> <span class="token string-literal singleline"><span class="token string">&quot;book price is </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$</span><span class="token expression">price</span></span><span class="token string">&quot;</span></span><span class="token punctuation">)</span></span>
<span class="line">                <span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>cursor<span class="token punctuation">.</span><span class="token function">moveToNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">            <span class="token punctuation">}</span></span>
<span class="line">            cursor<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行后点击 <strong>Query Data</strong> 观察 Logcat：</p><p><img src="`+h+`" alt="image-20220516002204383"></p><h2 id="附录" tabindex="-1"><a class="header-anchor" href="#附录"><span>附录</span></a></h2><h3 id="关于-try-catch" tabindex="-1"><a class="header-anchor" href="#关于-try-catch"><span>关于 Try Catch</span></a></h3><p>Kotlin是没有异常检查机制（checked exception）的。这意味着使用Kotlin编写的所 有代码都不会强制要求你进行异常捕获或异常抛出。上述代码中的try catch代码块是参照Java的编程规范添加的，即使你不写try catch代码块，在Kotlin中依然可以编译通过。</p><p>语法：</p><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre><code><span class="line"><span class="token keyword">try</span> <span class="token punctuation">{</span></span>
<span class="line">    逻辑代码块<span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span> <span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token class-name">ExceptionType</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    处理代码块<span class="token number">1</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在以上语法中，把可能引发异常的语句封装在 try 语句块中，用以捕获可能发生的异常。</p><p>如果 try 语句块中发生异常，那么一个相应的异常对象就会被拋出，然后 catch 语句就会依据所拋出异常对象的类型进行捕获，并处理。处理之后，程序会跳过 try 语句块中剩余的语句，转到 catch 语句块后面的第一条语句开始执行。</p><p>如果 try 语句块中没有异常发生，那么 try 块正常结束，后面的 catch 语句块被跳过，程序将从 catch 语句块后的第一条语句开始执行。</p><p>在以上语法的处理代码块1中，可以使用以下 3 个方法输出相应的异常信息。</p><ul><li>printStackTrace() 方法：指出异常的类型、性质、栈层次及出现在程序中的位置。</li><li>getMessage() 方法：输出错误的性质。</li><li>toString() 方法：给出异常的类型与性质。</li></ul>`,145)]))}const S=s(q,[["render",f]]),w=JSON.parse('{"path":"/blogs/xxbj/Android/7.html","title":"Android - File","lang":"en-US","frontmatter":{"title":"Android - File","date":"2022-05-16T00:00:00.000Z","tags":["Android"],"categories":["学习笔记"]},"headers":[{"level":2,"title":"文件存取","slug":"文件存取","link":"#文件存取","children":[{"level":3,"title":"文件存储","slug":"文件存储","link":"#文件存储","children":[]},{"level":3,"title":"文件读取","slug":"文件读取","link":"#文件读取","children":[]}]},{"level":2,"title":"SharedPreferences 存储","slug":"sharedpreferences-存储","link":"#sharedpreferences-存储","children":[{"level":3,"title":"数据存储","slug":"数据存储","link":"#数据存储","children":[]},{"level":3,"title":"数据读取","slug":"数据读取","link":"#数据读取","children":[]},{"level":3,"title":"记住密码功能 (以后再补)","slug":"记住密码功能-以后再补","link":"#记住密码功能-以后再补","children":[]},{"level":3,"title":"SQLite数据库","slug":"sqlite数据库","link":"#sqlite数据库","children":[]}]},{"level":2,"title":"附录","slug":"附录","link":"#附录","children":[{"level":3,"title":"关于 Try Catch","slug":"关于-try-catch","link":"#关于-try-catch","children":[]}]}],"git":{"createdTime":1748156404000,"updatedTime":1748156404000,"contributors":[{"name":"PPPerryPan","email":"perrypan0123@outlook.com","commits":1}]},"filePathRelative":"blogs/xxbj/Android/7.md"}');import.meta.webpackHot&&(import.meta.webpackHot.accept(),__VUE_HMR_RUNTIME__.updatePageData&&__VUE_HMR_RUNTIME__.updatePageData(w));export{S as comp,w as data};
