import{_ as n,c as a,a as p,o as t}from"./app-Dh5bFHR3.js";const e="/blog/assets/image-20220420092052474-COqWsUUh.png",o="/blog/assets/image-20220420092146732-CbJGdmfe.png",l="/blog/assets/image-20220420205804532-gF7eJhWW.png",c="/blog/assets/image-20220808173035243-D-FNl9-i.png",i="/blog/assets/image-20220808173151164-CWGw9gtd.png",u="/blog/assets/image-20220808173238643-D0Ldtyj0.png",r="/blog/assets/image-20220808173332933-CWhc2i5k.png",k="/blog/assets/kali-linux-2022.1-vmware-amd64-2022-04-20-17-24-38-CfXKduKX.png",d="/blog/assets/image-20220420203904774-rbU9Fvq8.png",v="/blog/assets/image-20220420204249269-SJPIe2U5.png",m="/blog/assets/image-20220420210311378-DtEBimpW.png",b="/blog/assets/image-20220420210553471-DQRehLiD.png",g="/blog/assets/image-20220818183728743-Djs597y_.png",q="/blog/assets/image-20220818191543734-B88B0Iek.png",_="/blog/assets/image-20220818191625244-CBfs3FPM.png",$="/blog/assets/image-20220818191704189-7HtvMN3Q.png",h="/blog/assets/image-20220818191758493-BHR2b_Qy.png",f="/blog/assets/image-20220818191824540-DJ0vv4wX.png",y="/blog/assets/image-20220818192311053-Cko32iHL.png",w="/blog/assets/image-20220420214221204-B-XwVw4M.png",S={};function L(T,s){return t(),a("div",null,s[0]||(s[0]=[p('<h2 id="准备" tabindex="-1"><a class="header-anchor" href="#准备"><span><strong>准备</strong></span></a></h2><p><strong>工具</strong></p><ul><li><p>OWASP</p></li><li><p>kali 2022.1</p></li></ul><p><strong>步骤</strong></p><p>启动 OWASP，并进入DVWA，进入：admin、password</p><p><img src="'+e+'" alt="image-20220420092052474"></p><h2 id="low" tabindex="-1"><a class="header-anchor" href="#low"><span>Low</span></a></h2><p>确认安全等级为low</p><p><img src="'+o+`" alt="image-20220420092146732"></p><p>观察源代码</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token keyword">isset</span><span class="token punctuation">(</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;Login&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    </span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;password&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span><span class="token variable">$pass</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token variable">$qry</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;SELECT * FROM \`users\` WHERE user=&#39;<span class="token interpolation"><span class="token variable">$user</span></span>&#39; AND password=&#39;<span class="token interpolation"><span class="token variable">$pass</span></span>&#39;;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span> <span class="token variable">$qry</span> <span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;&lt;pre&gt;&#39;</span> <span class="token operator">.</span> <span class="token function">mysql_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;/pre&gt;&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$result</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mysql_num_rows</span><span class="token punctuation">(</span> <span class="token variable">$result</span> <span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Get users details</span></span>
<span class="line">        <span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// Bug fix.</span></span>
<span class="line">        <span class="token variable">$avatar</span> <span class="token operator">=</span> <span class="token function">mysql_result</span><span class="token punctuation">(</span> <span class="token variable">$result</span><span class="token punctuation">,</span> <span class="token variable">$i</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;avatar&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Login Successful</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;p&gt;Welcome to the password protected area &quot;</span> <span class="token operator">.</span> <span class="token variable">$user</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;&lt;/p&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;&lt;img src=&quot;&#39;</span> <span class="token operator">.</span> <span class="token variable">$avatar</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&quot; /&gt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//Login failed</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;&lt;br&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">mysql_close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>方法一：尝试SQL注入：成功通过</p><p><img src="`+l+'" alt="image-20220420205804532"></p><p>方法二：</p><p>随便输点东西，然后将数据包发送到 Intruder</p><p><img src="'+c+'" alt="image-20220808173035243"></p><p>标记可爆破的地方为变量</p><p><img src="'+i+'" alt="image-20220808173151164"></p><p>载入弱密码字典</p><p><img src="'+u+'" alt="image-20220808173238643"></p><p>返回长度不一样的就是密码</p><p><img src="'+r+`" alt="image-20220808173332933"></p><h2 id="medium" tabindex="-1"><a class="header-anchor" href="#medium"><span>Medium</span></a></h2><p>观察其代码：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token keyword">isset</span><span class="token punctuation">(</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;Login&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Sanitise username input</span></span>
<span class="line">    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;username&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">mysql_real_escape_string</span><span class="token punctuation">(</span> <span class="token variable">$user</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Sanitise password input</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">mysql_real_escape_string</span><span class="token punctuation">(</span> <span class="token variable">$pass</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span> <span class="token variable">$pass</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token variable">$qry</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;SELECT * FROM \`users\` WHERE user=&#39;<span class="token interpolation"><span class="token variable">$user</span></span>&#39; AND password=&#39;<span class="token interpolation"><span class="token variable">$pass</span></span>&#39;;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span> <span class="token variable">$qry</span> <span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;&lt;pre&gt;&#39;</span> <span class="token operator">.</span> <span class="token function">mysql_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;/pre&gt;&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$result</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mysql_num_rows</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Get users details</span></span>
<span class="line">        <span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// Bug fix.</span></span>
<span class="line">        <span class="token variable">$avatar</span> <span class="token operator">=</span> <span class="token function">mysql_result</span><span class="token punctuation">(</span> <span class="token variable">$result</span><span class="token punctuation">,</span> <span class="token variable">$i</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;avatar&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Login Successful</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;p&gt;Welcome to the password protected area &quot;</span> <span class="token operator">.</span> <span class="token variable">$user</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;&lt;/p&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;&lt;img src=&quot;&#39;</span> <span class="token operator">.</span> <span class="token variable">$avatar</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&quot; /&gt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">//Login failed</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;&lt;br&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">mysql_close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>mysqli_real_escape_string(string,connection)</code> ：函数会对字符串string中的特殊符号（\\x00，\\n，\\r，\\，‘，“，\\x1a）进行转义，基本可以抵抗SQL注入</p><p><code>$GLOBALS</code> ：引用全局作用域中可用的全部变量。$GLOBALS 这种全局变量用于在 PHP 脚本中的任意位置访问全局变量（从函数或方法中均可）。PHP 在名为 $GLOBALS[index] 的数组中存储了所有全局变量。变量的名字就是数组的键。</p><p>可以看到，medium级别的代码对用户输入的参数进行了简单的过滤，对一些预定义字符进行了转义，基本上防止了SQL注入。还有一个措施就是如果密码输错了，则延时两秒之后才能再次提交。</p><p>这依然可以和 low 级别的爆破一样，只不过时间长了点而已。因为试一次密码要过滤2秒才能试下一个。</p><p>启动Burp Suite，配置Firefox代理，转到 Brute Force，随便输入点东西，如：123，123，-&gt; login，得到抓包结果</p><p><img src="`+k+'" alt="kali-linux-2022.1-vmware-amd64-2022-04-20-17-24-38"></p><p>将其Send to Intruder，在intruder的positions选择中，先点击clear$清除所有的变量。</p><p>然后分别给username和password这两个字段后面的内容添加add$，添加变量并将attack type的值设置为cluster bomb在intruder的positions选择中，先点击clear$清除所有的变量。</p><p>然后分别给username和password这两个字段后面的内容添加add$，添加变量并将attack type的值设置为cluster bomb。</p><p>分别给1、2 Load字典</p><p><img src="'+d+'" alt="image-20220420203904774"></p><p>点击Start attack，观察Length，易得 密码为 admin password，返回测试，成功通过</p><p><img src="'+v+`" alt="image-20220420204249269"></p><h2 id="high-easy" tabindex="-1"><a class="header-anchor" href="#high-easy"><span>High (Easy)</span></a></h2><p>观察源代码</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token keyword">isset</span><span class="token punctuation">(</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;Login&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Sanitise username input</span></span>
<span class="line">    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;username&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">stripslashes</span><span class="token punctuation">(</span> <span class="token variable">$user</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">mysql_real_escape_string</span><span class="token punctuation">(</span> <span class="token variable">$user</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Sanitise password input</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">stripslashes</span><span class="token punctuation">(</span> <span class="token variable">$pass</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">mysql_real_escape_string</span><span class="token punctuation">(</span> <span class="token variable">$pass</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span> <span class="token variable">$pass</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token variable">$qry</span> <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;SELECT * FROM \`users\` WHERE user=&#39;<span class="token interpolation"><span class="token variable">$user</span></span>&#39; AND password=&#39;<span class="token interpolation"><span class="token variable">$pass</span></span>&#39;;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysql_query</span><span class="token punctuation">(</span><span class="token variable">$qry</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;&lt;pre&gt;&#39;</span> <span class="token operator">.</span> <span class="token function">mysql_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;/pre&gt;&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$result</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mysql_num_rows</span><span class="token punctuation">(</span> <span class="token variable">$result</span> <span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Get users details</span></span>
<span class="line">        <span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// Bug fix.</span></span>
<span class="line">        <span class="token variable">$avatar</span> <span class="token operator">=</span> <span class="token function">mysql_result</span><span class="token punctuation">(</span> <span class="token variable">$result</span><span class="token punctuation">,</span> <span class="token variable">$i</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">&quot;avatar&quot;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Login Successful</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;p&gt;Welcome to the password protected area &quot;</span> <span class="token operator">.</span> <span class="token variable">$user</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;&lt;/p&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;&lt;img src=&quot;&#39;</span> <span class="token operator">.</span> <span class="token variable">$avatar</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&quot; /&gt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Login failed</span></span>
<span class="line">        <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;&lt;br&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token function">mysql_close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>High中 加入了Login参数，通过抓包，可以看到，登录验证时提交了三个参数：username、password、Login；<strong>（与他人High中含有token不同，我的没有token，此阶段按实际情况进行实验。）</strong></p><p><img src="`+m+'" alt="image-20220420210311378"></p><p>老规矩爆破：admin admin</p><p><img src="'+b+`" alt="image-20220420210553471"></p><h2 id="high" tabindex="-1"><a class="header-anchor" href="#high"><span>High</span></a></h2><p>源代码：</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line">Brute Force Source</span>
<span class="line">vulnerabilities/brute/source/high.php</span>
<span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token keyword">isset</span><span class="token punctuation">(</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;Login&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Check Anti-CSRF token</span></span>
<span class="line">    <span class="token function">checkToken</span><span class="token punctuation">(</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;user_token&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;session_token&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;index.php&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Sanitise username input</span></span>
<span class="line">    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;username&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">stripslashes</span><span class="token punctuation">(</span> <span class="token variable">$user</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_object</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">mysqli_real_escape_string</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token variable">$user</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">trigger_error</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span><span class="token punctuation">,</span> <span class="token constant">E_USER_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string double-quoted-string">&quot;&quot;</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Sanitise password input</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token variable">$_GET</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">stripslashes</span><span class="token punctuation">(</span> <span class="token variable">$pass</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_object</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">mysqli_real_escape_string</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token variable">$pass</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">trigger_error</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span><span class="token punctuation">,</span> <span class="token constant">E_USER_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string double-quoted-string">&quot;&quot;</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span> <span class="token variable">$pass</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Check database</span></span>
<span class="line">    <span class="token variable">$query</span>  <span class="token operator">=</span> <span class="token string double-quoted-string">&quot;SELECT * FROM \`users\` WHERE user = &#39;<span class="token interpolation"><span class="token variable">$user</span></span>&#39; AND password = &#39;<span class="token interpolation"><span class="token variable">$pass</span></span>&#39;;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">mysqli_query</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token variable">$query</span> <span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token keyword">die</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;&lt;pre&gt;&#39;</span> <span class="token operator">.</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">is_object</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">mysqli_error</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token variable">$___mysqli_res</span> <span class="token operator">=</span> <span class="token function">mysqli_connect_error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$___mysqli_res</span> <span class="token punctuation">:</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;&lt;/pre&gt;&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$result</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mysqli_num_rows</span><span class="token punctuation">(</span> <span class="token variable">$result</span> <span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Get users details</span></span>
<span class="line">        <span class="token variable">$row</span>    <span class="token operator">=</span> <span class="token function">mysqli_fetch_assoc</span><span class="token punctuation">(</span> <span class="token variable">$result</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$avatar</span> <span class="token operator">=</span> <span class="token variable">$row</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;avatar&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Login successful</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;p&gt;Welcome to the password protected area <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$user</span><span class="token punctuation">}</span></span>&lt;/p&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;img src=\\&quot;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$avatar</span><span class="token punctuation">}</span></span>\\&quot; /&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Login failed</span></span>
<span class="line">        <span class="token function">sleep</span><span class="token punctuation">(</span> <span class="token function">rand</span><span class="token punctuation">(</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;/pre&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">is_null</span><span class="token punctuation">(</span><span class="token variable">$___mysqli_res</span> <span class="token operator">=</span> <span class="token function">mysqli_close</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token constant boolean">false</span> <span class="token punctuation">:</span> <span class="token variable">$___mysqli_res</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Generate Anti-CSRF token</span></span>
<span class="line"><span class="token function">generateSessionToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>stripslashes(string)</code>： 去除掉string字符的反斜杠＼</p><p><code>mysqli_real_escape_string(string,connection)</code> ：函数会对字符串string中的特殊符号（\\x00，\\n，\\r，\\，‘，“，\\x1a）进行转义。</p><p><code>$GLOBALS</code> ：引用全局作用域中可用的全部变量。$GLOBALS 这种全局变量用于在 PHP 脚本中的任意位置访问全局变量（从函数或方法中均可）。PHP 在名为 $GLOBALS[index] 的数组中存储了所有全局变量。变量的名字就是数组的键。</p><p>High级别的代码使用了Anti-CSRF token来抵御CSRF的攻击，使用了stripslashes函数和mysqli_real_esacpe_string来抵御SQL注入和XSS的攻击。</p><p>由于使用了Anti-CSRF token，每次服务器返回的登陆页面中都会包含一个随机的user_token的值，用户每次登录时都要将user_token一起提交。服务器收到请求后，会优先做token的检查，再进行sql查询。所以，我们不能再利用burpsuite进行无脑式的爆破了。</p><p>随便输入点东西BP抓包看看，发现加入了user_token</p><p><img src="`+g+'" alt="image-20220818183728743"></p><p>将包发送到Intruder，</p><p>​ 因为有多个变量，攻击模式pitchfork，并标记两个变量</p><p><img src="'+q+'" alt="image-20220818191543734"></p><p>到Options中的Grep-Extract模块进行相应设置</p><p><img src="'+_+'" alt="image-20220818191625244"></p><p>配置最高线程为1</p><blockquote><p>pitchfork 不支持多线程</p></blockquote><p><img src="'+$+'" alt="image-20220818191704189"></p><p>回到Payloads，设置第一个参数为弱密码类型，并导入密码库</p><p><img src="'+h+'" alt="image-20220818191758493"></p><p>配置第二个参数</p><p><img src="'+f+'" alt="image-20220818191824540"></p><p>攻击一段时间后，发现返回长度不同的数据，其中一个就是密码</p><p><img src="'+y+'" alt="image-20220818192311053"></p><h2 id="impossible-分析" tabindex="-1"><a class="header-anchor" href="#impossible-分析"><span>impossible 分析</span></a></h2><p>kali上的DVWA没有此等级，转到Windows端，并启用impossible等级</p><p><img src="'+w+`" alt="image-20220420214221204"></p><p>查看源代码</p><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token keyword">isset</span><span class="token punctuation">(</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;Login&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;username&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token keyword">isset</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string single-quoted-string">&#39;password&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Check Anti-CSRF token</span></span>
<span class="line">    <span class="token function">checkToken</span><span class="token punctuation">(</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;user_token&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;session_token&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;index.php&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Sanitise username input</span></span>
<span class="line">    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;username&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token function">stripslashes</span><span class="token punctuation">(</span> <span class="token variable">$user</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$user</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_object</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">mysqli_real_escape_string</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token variable">$user</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">trigger_error</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span><span class="token punctuation">,</span> <span class="token constant">E_USER_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string double-quoted-string">&quot;&quot;</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Sanitise password input</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;password&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">stripslashes</span><span class="token punctuation">(</span> <span class="token variable">$pass</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">is_object</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">mysqli_real_escape_string</span><span class="token punctuation">(</span><span class="token variable">$GLOBALS</span><span class="token punctuation">[</span><span class="token string double-quoted-string">&quot;___mysqli_ston&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token variable">$pass</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">trigger_error</span><span class="token punctuation">(</span><span class="token string double-quoted-string">&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;</span><span class="token punctuation">,</span> <span class="token constant">E_USER_ERROR</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string double-quoted-string">&quot;&quot;</span> <span class="token punctuation">:</span> <span class="token string double-quoted-string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$pass</span> <span class="token operator">=</span> <span class="token function">md5</span><span class="token punctuation">(</span> <span class="token variable">$pass</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Default values</span></span>
<span class="line">    <span class="token variable">$total_failed_login</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$lockout_time</span>       <span class="token operator">=</span> <span class="token number">15</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$account_locked</span>     <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Check the database (Check user information)</span></span>
<span class="line">    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;SELECT failed_login, last_login FROM users WHERE user = (:user) LIMIT 1;&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">bindParam</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;:user&#39;</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">PARAM_STR</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Check to see if the user has been locked out.</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token punctuation">(</span> <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span> <span class="token variable">$row</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;failed_login&#39;</span> <span class="token punctuation">]</span> <span class="token operator">&gt;=</span> <span class="token variable">$total_failed_login</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span>  <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// User locked out.  Note, using this method would allow for user enumeration!</span></span>
<span class="line">        <span class="token comment">//echo &quot;&lt;pre&gt;&lt;br /&gt;This account has been locked due to too many incorrect logins.&lt;/pre&gt;&quot;;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Calculate when the user would be allowed to login again</span></span>
<span class="line">        <span class="token variable">$last_login</span> <span class="token operator">=</span> <span class="token function">strtotime</span><span class="token punctuation">(</span> <span class="token variable">$row</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;last_login&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$timeout</span>    <span class="token operator">=</span> <span class="token variable">$last_login</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token variable">$lockout_time</span> <span class="token operator">*</span> <span class="token number">60</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$timenow</span>    <span class="token operator">=</span> <span class="token function">time</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">/*</span>
<span class="line">        print &quot;The last login was: &quot; . date (&quot;h:i:s&quot;, $last_login) . &quot;&lt;br /&gt;&quot;;</span>
<span class="line">        print &quot;The timenow is: &quot; . date (&quot;h:i:s&quot;, $timenow) . &quot;&lt;br /&gt;&quot;;</span>
<span class="line">        print &quot;The timeout is: &quot; . date (&quot;h:i:s&quot;, $timeout) . &quot;&lt;br /&gt;&quot;;</span>
<span class="line">        */</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Check to see if enough time has passed, if it hasn&#39;t locked the account</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$timenow</span> <span class="token operator">&lt;</span> <span class="token variable">$timeout</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token variable">$account_locked</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token comment">// print &quot;The account is locked&lt;br /&gt;&quot;;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Check the database (if username matches the password)</span></span>
<span class="line">    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;SELECT * FROM users WHERE user = (:user) AND password = (:password) LIMIT 1;&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">bindParam</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;:user&#39;</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">PARAM_STR</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">bindParam</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;:password&#39;</span><span class="token punctuation">,</span> <span class="token variable">$pass</span><span class="token punctuation">,</span> <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">PARAM_STR</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$row</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// If its a valid login...</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token punctuation">(</span> <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">rowCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span> <span class="token variable">$account_locked</span> <span class="token operator">==</span> <span class="token constant boolean">false</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Get users details</span></span>
<span class="line">        <span class="token variable">$avatar</span>       <span class="token operator">=</span> <span class="token variable">$row</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;avatar&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$failed_login</span> <span class="token operator">=</span> <span class="token variable">$row</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;failed_login&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$last_login</span>   <span class="token operator">=</span> <span class="token variable">$row</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;last_login&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Login successful</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;p&gt;Welcome to the password protected area &lt;em&gt;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$user</span><span class="token punctuation">}</span></span>&lt;/em&gt;&lt;/p&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;img src=\\&quot;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$avatar</span><span class="token punctuation">}</span></span>\\&quot; /&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Had the account been locked out since last login?</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$failed_login</span> <span class="token operator">&gt;=</span> <span class="token variable">$total_failed_login</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;p&gt;&lt;em&gt;Warning&lt;/em&gt;: Someone might of been brute forcing your account.&lt;/p&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;p&gt;Number of login attempts: &lt;em&gt;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$failed_login</span><span class="token punctuation">}</span></span>&lt;/em&gt;.&lt;br /&gt;Last login attempt was at: &lt;em&gt;\${last_login}&lt;/em&gt;.&lt;/p&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Reset bad login count</span></span>
<span class="line">        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;UPDATE users SET failed_login = &quot;0&quot; WHERE user = (:user) LIMIT 1;&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">bindParam</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;:user&#39;</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">PARAM_STR</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Login failed</span></span>
<span class="line">        <span class="token function">sleep</span><span class="token punctuation">(</span> <span class="token function">rand</span><span class="token punctuation">(</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Give the user some feedback</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;&lt;br /&gt;Username and/or password incorrect.&lt;br /&gt;&lt;br/&gt;Alternative, the account has been locked because of too many failed logins.&lt;br /&gt;If this is the case, &lt;em&gt;please try again in <span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$lockout_time</span><span class="token punctuation">}</span></span> minutes&lt;/em&gt;.&lt;/pre&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Update bad login count</span></span>
<span class="line">        <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;UPDATE users SET failed_login = (failed_login + 1) WHERE user = (:user) LIMIT 1;&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">bindParam</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;:user&#39;</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">PARAM_STR</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Set the last login time</span></span>
<span class="line">    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token variable">$db</span><span class="token operator">-&gt;</span><span class="token function">prepare</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;UPDATE users SET last_login = now() WHERE user = (:user) LIMIT 1;&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">bindParam</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;:user&#39;</span><span class="token punctuation">,</span> <span class="token variable">$user</span><span class="token punctuation">,</span> <span class="token class-name static-context">PDO</span><span class="token operator">::</span><span class="token constant">PARAM_STR</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$data</span><span class="token operator">-&gt;</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Generate Anti-CSRF token</span></span>
<span class="line"><span class="token function">generateSessionToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>后端代码解析：</p><p>1、$_GET收集来自表单中的值</p><p>2、user_token：用户token</p><p>3、is_numeric()函数用于检测变量是否为数字或数字字符串。</p><p>4、prepare ()准备要执行的SQL语句并返回一个 PDOStatement 对象</p><p>5、bindParam () 绑定一个参数到指定的变量名</p><p>6、execute()方法返回对象</p><p>7、fetch是一种HTTP数据请求的方式，是XMLHttpRequest的一种替代方案。</p><p>8、rowCount — 返回受上一个 SQL 语句影响的行数</p>`,83)]))}const A=n(S,[["render",L]]),E=JSON.parse('{"path":"/blogs/xxbj/Web_Security/Lab1_Brute_Force.html","title":"DVWA - Brute Force","lang":"en-US","frontmatter":{"title":"DVWA - Brute Force","date":"2022-04-20T00:00:00.000Z","tags":["网络安全"],"categories":["学习笔记"]},"headers":[{"level":2,"title":"准备","slug":"准备","link":"#准备","children":[]},{"level":2,"title":"Low","slug":"low","link":"#low","children":[]},{"level":2,"title":"Medium","slug":"medium","link":"#medium","children":[]},{"level":2,"title":"High (Easy)","slug":"high-easy","link":"#high-easy","children":[]},{"level":2,"title":"High","slug":"high","link":"#high","children":[]},{"level":2,"title":"impossible 分析","slug":"impossible-分析","link":"#impossible-分析","children":[]}],"git":{"createdTime":1748156404000,"updatedTime":1748156404000,"contributors":[{"name":"PPPerryPan","email":"perrypan0123@outlook.com","commits":1}]},"filePathRelative":"blogs/xxbj/Web_Security/Lab1_Brute_Force.md"}');import.meta.webpackHot&&(import.meta.webpackHot.accept(),__VUE_HMR_RUNTIME__.updatePageData&&__VUE_HMR_RUNTIME__.updatePageData(E));export{A as comp,E as data};
