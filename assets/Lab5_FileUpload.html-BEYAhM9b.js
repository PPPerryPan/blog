import{_ as s,c as a,a as e,o as p}from"./app-Dh5bFHR3.js";const l="/blog/assets/image-20220518085013777-CSpuoW9s.png",t="/blog/assets/image-20220518090340169-CU9pr4dH.png",i="/blog/assets/image-20220518090608569-BU6EnoNC.png",o="/blog/assets/image-20220518090931095-C1Ow2EC8.png",c="/blog/assets/image-20220518091104741-BV-S0Z0x.png",u="/blog/assets/image-20220518091118015-CSbQQ-yP.png",d={};function r(m,n){return p(),a("div",null,n[0]||(n[0]=[e(`<h2 id="low" tabindex="-1"><a class="header-anchor" href="#low"><span>Low</span></a></h2><h3 id="源代码" tabindex="-1"><a class="header-anchor" href="#源代码"><span>源代码</span></a></h3><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token keyword">isset</span><span class="token punctuation">(</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;Upload&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Where are we going to be writing to?</span></span>
<span class="line">    <span class="token variable">$target_path</span>  <span class="token operator">=</span> <span class="token constant">DVWA_WEB_PAGE_TO_ROOT</span> <span class="token operator">.</span> <span class="token string double-quoted-string">&quot;hackable/uploads/&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$target_path</span> <span class="token operator">.=</span> <span class="token function">basename</span><span class="token punctuation">(</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;uploaded&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Can we move the file to the upload folder?</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">move_uploaded_file</span><span class="token punctuation">(</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;uploaded&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;tmp_name&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$target_path</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// No</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Yes!</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;<span class="token interpolation"><span class="token punctuation">{</span><span class="token variable">$target_path</span><span class="token punctuation">}</span></span> succesfully uploaded!&lt;/pre&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>服务器对上传文件的类型、内容没有做任何的检查、过滤</p><h3 id="漏洞利用" tabindex="-1"><a class="header-anchor" href="#漏洞利用"><span>漏洞利用</span></a></h3><p>随便选个文件，直接上传即可，在服务器目录页可看见上传的文件</p><p><img src="`+l+`" alt="image-20220518085013777"></p><h2 id="medium" tabindex="-1"><a class="header-anchor" href="#medium"><span>Medium</span></a></h2><h3 id="源代码-1" tabindex="-1"><a class="header-anchor" href="#源代码-1"><span>源代码</span></a></h3><div class="language-php+HTML line-numbers-mode" data-highlighter="prismjs" data-ext="php+HTML" data-title="php+HTML"><pre><code><span class="line">&lt;?php</span>
<span class="line"></span>
<span class="line">if( isset( $_POST[ &#39;Upload&#39; ] ) ) {</span>
<span class="line">    // Where are we going to be writing to?</span>
<span class="line">    $target_path  = DVWA_WEB_PAGE_TO_ROOT . &quot;hackable/uploads/&quot;;</span>
<span class="line">    $target_path .= basename( $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ] );</span>
<span class="line"></span>
<span class="line">    // File information</span>
<span class="line">    $uploaded_name = $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ];</span>
<span class="line">    $uploaded_type = $_FILES[ &#39;uploaded&#39; ][ &#39;type&#39; ];</span>
<span class="line">    $uploaded_size = $_FILES[ &#39;uploaded&#39; ][ &#39;size&#39; ];</span>
<span class="line"></span>
<span class="line">    // Is it an image?</span>
<span class="line">    if( ( $uploaded_type == &quot;image/jpeg&quot; || $uploaded_type == &quot;image/png&quot; ) &amp;&amp;</span>
<span class="line">        ( $uploaded_size &lt; 100000 ) ) {</span>
<span class="line"></span>
<span class="line">        // Can we move the file to the upload folder?</span>
<span class="line">        if( !move_uploaded_file( $_FILES[ &#39;uploaded&#39; ][ &#39;tmp_name&#39; ], $target_path ) ) {</span>
<span class="line">            // No</span>
<span class="line">            echo &#39;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#39;;</span>
<span class="line">        }</span>
<span class="line">        else {</span>
<span class="line">            // Yes!</span>
<span class="line">            echo &quot;&lt;pre&gt;{$target_path} succesfully uploaded!&lt;/pre&gt;&quot;;</span>
<span class="line">        }</span>
<span class="line">    }</span>
<span class="line">    else {</span>
<span class="line">        // Invalid file</span>
<span class="line">        echo &#39;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&#39;;</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">?&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>观察可得：过滤的是文件的上传类型，而不是文件的后缀名</p><h3 id="漏洞利用-1" tabindex="-1"><a class="header-anchor" href="#漏洞利用-1"><span>漏洞利用</span></a></h3><p>开启BP抓包，并上传文件，将数据类型改成 image/jpeg</p><p><img src="`+t+'" alt="image-20220518090340169"></p><p>成功上传</p><p><img src="'+i+`" alt="image-20220518090608569"></p><h2 id="high" tabindex="-1"><a class="header-anchor" href="#high"><span>High</span></a></h2><h3 id="源代码-2" tabindex="-1"><a class="header-anchor" href="#源代码-2"><span>源代码</span></a></h3><div class="language-php+HTML line-numbers-mode" data-highlighter="prismjs" data-ext="php+HTML" data-title="php+HTML"><pre><code><span class="line">&lt;?php</span>
<span class="line"></span>
<span class="line">if( isset( $_POST[ &#39;Upload&#39; ] ) ) {</span>
<span class="line">    // Where are we going to be writing to?</span>
<span class="line">    $target_path  = DVWA_WEB_PAGE_TO_ROOT . &quot;hackable/uploads/&quot;;</span>
<span class="line">    $target_path .= basename( $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ] );</span>
<span class="line"></span>
<span class="line">    // File information</span>
<span class="line">    $uploaded_name = $_FILES[ &#39;uploaded&#39; ][ &#39;name&#39; ];</span>
<span class="line">    $uploaded_ext  = substr( $uploaded_name, strrpos( $uploaded_name, &#39;.&#39; ) + 1);</span>
<span class="line">    $uploaded_size = $_FILES[ &#39;uploaded&#39; ][ &#39;size&#39; ];</span>
<span class="line">    $uploaded_tmp  = $_FILES[ &#39;uploaded&#39; ][ &#39;tmp_name&#39; ];</span>
<span class="line"></span>
<span class="line">    // Is it an image?</span>
<span class="line">    if( ( strtolower( $uploaded_ext ) == &quot;jpg&quot; || strtolower( $uploaded_ext ) == &quot;jpeg&quot; || strtolower( $uploaded_ext ) == &quot;png&quot; ) &amp;&amp;</span>
<span class="line">        ( $uploaded_size &lt; 100000 ) &amp;&amp;</span>
<span class="line">        getimagesize( $uploaded_tmp ) ) {</span>
<span class="line"></span>
<span class="line">        // Can we move the file to the upload folder?</span>
<span class="line">        if( !move_uploaded_file( $uploaded_tmp, $target_path ) ) {</span>
<span class="line">            // No</span>
<span class="line">            echo &#39;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#39;;</span>
<span class="line">        }</span>
<span class="line">        else {</span>
<span class="line">            // Yes!</span>
<span class="line">            echo &quot;&lt;pre&gt;{$target_path} succesfully uploaded!&lt;/pre&gt;&quot;;</span>
<span class="line">        }</span>
<span class="line">    }</span>
<span class="line">    else {</span>
<span class="line">        // Invalid file</span>
<span class="line">        echo &#39;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&#39;;</span>
<span class="line">    }</span>
<span class="line">}</span>
<span class="line"></span>
<span class="line">?&gt;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>strrpos(string , find ,start) 查找find字符在string字符中的最后一次出现的位置，start参数可选，表示指定从哪里开始</p><p>substr(string,start,length) 返回string字符中从start开始的字符串，length参数可选，表示返回字符的长度</p><p>strtolower(string) 返回给定字符串的小写</p><p>getimagesize(string) ：函数将测定任何 GIF，JPG，PNG，SWF，SWC，PSD，TIFF，BMP，IFF，JP2，JPX，JB2，JPC，XBM 或 WBMP 图像文件的大小并返回图像的尺寸以及文件类型和一个可以用于普通 HTML 文件中 IMG 标记中的 height/width 文本字符串。如果不能访问 filename 指定的图像或者其不是有效的图像，getimagesize() 将返回 FALSE 并产生一条 E_WARNING级的错误。所以 getimagesize函数的作用是判断上传的文件是不是有效的图片</p><p>move_uploaded_file（file,newlocal） 函数表示把给定的文件移动到新的位置</p><p>所以 $uploaded_ext 表示的是上传文件的后缀名 ，这里限制上传的文件的后缀名必须以 jpg 、jpeg　或　png　结尾，同时大小&lt;100000，同时上传的文件必须是有效的图片格式（不只是以图片的格式结尾，而且文件内容是图片格式的）。</p><h3 id="漏洞利用-2" tabindex="-1"><a class="header-anchor" href="#漏洞利用-2"><span>漏洞利用</span></a></h3><p>先把木马改成jpg模式尝试上传，失败</p><p><img src="`+o+'" alt="image-20220518090931095"></p><p>尝试在文件头加入JPG标识：GIF89</p><p><img src="'+c+'" alt="image-20220518091104741"></p><p>成功上传</p><p><img src="'+u+`" alt="image-20220518091118015"></p><h2 id="impossible" tabindex="-1"><a class="header-anchor" href="#impossible"><span>Impossible</span></a></h2><ul><li>源代码</li></ul><div class="language-php line-numbers-mode" data-highlighter="prismjs" data-ext="php" data-title="php"><pre><code><span class="line"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token keyword">isset</span><span class="token punctuation">(</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;Upload&#39;</span> <span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// Check Anti-CSRF token</span></span>
<span class="line">    <span class="token function">checkToken</span><span class="token punctuation">(</span> <span class="token variable">$_REQUEST</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;user_token&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$_SESSION</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;session_token&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;index.php&#39;</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// File information</span></span>
<span class="line">    <span class="token variable">$uploaded_name</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;uploaded&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;name&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$uploaded_ext</span>  <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span> <span class="token variable">$uploaded_name</span><span class="token punctuation">,</span> <span class="token function">strrpos</span><span class="token punctuation">(</span> <span class="token variable">$uploaded_name</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">&#39;.&#39;</span> <span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$uploaded_size</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;uploaded&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;size&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$uploaded_type</span> <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;uploaded&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;type&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$uploaded_tmp</span>  <span class="token operator">=</span> <span class="token variable">$_FILES</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;uploaded&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">[</span> <span class="token string single-quoted-string">&#39;tmp_name&#39;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Where are we going to be writing to?</span></span>
<span class="line">    <span class="token variable">$target_path</span>   <span class="token operator">=</span> <span class="token constant">DVWA_WEB_PAGE_TO_ROOT</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;hackable/uploads/&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//$target_file   = basename( $uploaded_name, &#39;.&#39; . $uploaded_ext ) . &#39;-&#39;;</span></span>
<span class="line">    <span class="token variable">$target_file</span>   <span class="token operator">=</span>  <span class="token function">md5</span><span class="token punctuation">(</span> <span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token variable">$uploaded_name</span> <span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;.&#39;</span> <span class="token operator">.</span> <span class="token variable">$uploaded_ext</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$temp_file</span>     <span class="token operator">=</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span> <span class="token function">ini_get</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;upload_tmp_dir&#39;</span> <span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;&#39;</span> <span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token punctuation">(</span> <span class="token function">sys_get_temp_dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span> <span class="token function">ini_get</span><span class="token punctuation">(</span> <span class="token string single-quoted-string">&#39;upload_tmp_dir&#39;</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token variable">$temp_file</span>    <span class="token operator">.=</span> <span class="token constant">DIRECTORY_SEPARATOR</span> <span class="token operator">.</span> <span class="token function">md5</span><span class="token punctuation">(</span> <span class="token function">uniqid</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token variable">$uploaded_name</span> <span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token string single-quoted-string">&#39;.&#39;</span> <span class="token operator">.</span> <span class="token variable">$uploaded_ext</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// Is it an image?</span></span>
<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token punctuation">(</span> <span class="token function">strtolower</span><span class="token punctuation">(</span> <span class="token variable">$uploaded_ext</span> <span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;jpg&#39;</span> <span class="token operator">||</span> <span class="token class-name">strtolower</span><span class="token punctuation">(</span> <span class="token variable">$uploaded_ext</span> <span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;jpeg&#39;</span> <span class="token operator">||</span> <span class="token class-name">strtolower</span><span class="token punctuation">(</span> <span class="token variable">$uploaded_ext</span> <span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;png&#39;</span> <span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span></span>
<span class="line">        <span class="token punctuation">(</span> <span class="token variable">$uploaded_size</span> <span class="token operator">&lt;</span> <span class="token number">100000</span> <span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span></span>
<span class="line">        <span class="token punctuation">(</span> <span class="token variable">$uploaded_type</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;image/jpeg&#39;</span> <span class="token operator">||</span> <span class="token variable">$uploaded_type</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;image/png&#39;</span> <span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span></span>
<span class="line">        <span class="token function">getimagesize</span><span class="token punctuation">(</span> <span class="token variable">$uploaded_tmp</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Strip any metadata, by re-encoding image (Note, using php-Imagick is recommended over php-GD)</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token variable">$uploaded_type</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;image/jpeg&#39;</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token variable">$img</span> <span class="token operator">=</span> <span class="token function">imagecreatefromjpeg</span><span class="token punctuation">(</span> <span class="token variable">$uploaded_tmp</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token function">imagejpeg</span><span class="token punctuation">(</span> <span class="token variable">$img</span><span class="token punctuation">,</span> <span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token variable">$img</span> <span class="token operator">=</span> <span class="token function">imagecreatefrompng</span><span class="token punctuation">(</span> <span class="token variable">$uploaded_tmp</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">            <span class="token function">imagepng</span><span class="token punctuation">(</span> <span class="token variable">$img</span><span class="token punctuation">,</span> <span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token function">imagedestroy</span><span class="token punctuation">(</span> <span class="token variable">$img</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Can we move the file to the web root from the temp folder?</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">rename</span><span class="token punctuation">(</span> <span class="token variable">$temp_file</span><span class="token punctuation">,</span> <span class="token punctuation">(</span> <span class="token function">getcwd</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">DIRECTORY_SEPARATOR</span> <span class="token operator">.</span> <span class="token variable">$target_path</span> <span class="token operator">.</span> <span class="token variable">$target_file</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// Yes!</span></span>
<span class="line">            <span class="token keyword">echo</span> <span class="token string double-quoted-string">&quot;&lt;pre&gt;&lt;a href=&#39;\${target_path}\${target_file}&#39;&gt;\${target_file}&lt;/a&gt; succesfully uploaded!&lt;/pre&gt;&quot;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">        <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">            <span class="token comment">// No</span></span>
<span class="line">            <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;&lt;pre&gt;Your image was not uploaded.&lt;/pre&gt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// Delete any temp files</span></span>
<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span> <span class="token function">file_exists</span><span class="token punctuation">(</span> <span class="token variable">$temp_file</span> <span class="token punctuation">)</span> <span class="token punctuation">)</span></span>
<span class="line">            <span class="token function">unlink</span><span class="token punctuation">(</span> <span class="token variable">$temp_file</span> <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// Invalid file</span></span>
<span class="line">        <span class="token keyword">echo</span> <span class="token string single-quoted-string">&#39;&lt;pre&gt;Your image was not uploaded. We can only accept JPEG or PNG images.&lt;/pre&gt;&#39;</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token comment">// Generate Anti-CSRF token</span></span>
<span class="line"><span class="token function">generateSessionToken</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token delimiter important">?&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>imagecreatefromjpeg(filename)：从给定的文件或url中创建一个新的图片</p><p>imagejpeg(image,filename,quality)：从image图像中以 filename 文件名创建一个jpeg的图片，参数quality可选，0-100 (质量从小到大)</p><p>imagedestroy(image) ： 销毁图像</p><p>可以看到，Impossible级别对上传的文件进行了重命名（为md5值，导致00截断无法绕过过滤规则），并且加入Anti-CSRF token防护CSRF攻击，同时对文件的内容作了严格的检查，导致攻击者无法上传含有恶意脚本的文件。</p>`,39)]))}const g=s(d,[["render",r]]),k=JSON.parse('{"path":"/blogs/xxbj/Web_Security/Lab5_FileUpload.html","title":"DVWA - File Upload","lang":"en-US","frontmatter":{"title":"DVWA - File Upload","date":"2022-05-20T00:00:00.000Z","tags":["网络安全"],"categories":["学习笔记"]},"headers":[{"level":2,"title":"Low","slug":"low","link":"#low","children":[{"level":3,"title":"源代码","slug":"源代码","link":"#源代码","children":[]},{"level":3,"title":"漏洞利用","slug":"漏洞利用","link":"#漏洞利用","children":[]}]},{"level":2,"title":"Medium","slug":"medium","link":"#medium","children":[{"level":3,"title":"源代码","slug":"源代码-1","link":"#源代码-1","children":[]},{"level":3,"title":"漏洞利用","slug":"漏洞利用-1","link":"#漏洞利用-1","children":[]}]},{"level":2,"title":"High","slug":"high","link":"#high","children":[{"level":3,"title":"源代码","slug":"源代码-2","link":"#源代码-2","children":[]},{"level":3,"title":"漏洞利用","slug":"漏洞利用-2","link":"#漏洞利用-2","children":[]}]},{"level":2,"title":"Impossible","slug":"impossible","link":"#impossible","children":[]}],"git":{"createdTime":1748156404000,"updatedTime":1748156404000,"contributors":[{"name":"PPPerryPan","email":"perrypan0123@outlook.com","commits":1}]},"filePathRelative":"blogs/xxbj/Web_Security/Lab5_FileUpload.md"}');import.meta.webpackHot&&(import.meta.webpackHot.accept(),__VUE_HMR_RUNTIME__.updatePageData&&__VUE_HMR_RUNTIME__.updatePageData(k));export{g as comp,k as data};
